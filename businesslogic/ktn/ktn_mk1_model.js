//
//	ktn_mk1_model.js
//
//	Copyright 2019 Roland Corporation. All rights reserved.
//

/* To prevent error on ESLint */
/* global PatchConverter, LivesetConverter, hex2, PatchInfo */

var KtnMk1Patch = {
	patch_name1:					{ pid: 'UserPatch%PatchName%0'	},
	patch_name2:					{ pid: 'UserPatch%PatchName%1'	},
	patch_name3:					{ pid: 'UserPatch%PatchName%2'	},
	patch_name4:					{ pid: 'UserPatch%PatchName%3'	},
	patch_name5:					{ pid: 'UserPatch%PatchName%4'	},
	patch_name6:					{ pid: 'UserPatch%PatchName%5'	},
	patch_name7:					{ pid: 'UserPatch%PatchName%6'	},
	patch_name8:					{ pid: 'UserPatch%PatchName%7'	},
	patch_name9:					{ pid: 'UserPatch%PatchName%8'	},
	patch_name10:					{ pid: 'UserPatch%PatchName%9'	},
	patch_name11:					{ pid: 'UserPatch%PatchName%10'	},
	patch_name12:					{ pid: 'UserPatch%PatchName%11'	},
	patch_name13:					{ pid: 'UserPatch%PatchName%12'	},
	patch_name14:					{ pid: 'UserPatch%PatchName%13'	},
	patch_name15:					{ pid: 'UserPatch%PatchName%14'	},
	patch_name16:					{ pid: 'UserPatch%PatchName%15'	},
//	output_select:					{ pid: 'UserPatch%'	},
//	comp_on_off:					{ pid: 'UserPatch%'	},
//	comp_type:						{ pid: 'UserPatch%'	},
//	comp_sustain:					{ pid: 'UserPatch%'	},
//	comp_attack:					{ pid: 'UserPatch%'	},
//	comp_tone:						{ pid: 'UserPatch%'	},
//	comp_level:						{ pid: 'UserPatch%'	},
	od_ds_on_off:					{ pid: 'UserPatch%Patch_0%0'	},
	od_ds_type:						{ pid: 'UserPatch%Patch_0%1'	},
	od_ds_drive:					{ pid: 'UserPatch%Patch_0%2'	},
	od_ds_bottom:					{ pid: 'UserPatch%Patch_0%3'	},
	od_ds_tone:						{ pid: 'UserPatch%Patch_0%4'	},
	od_ds_solo_sw:					{ pid: 'UserPatch%Patch_0%5'	},
	od_ds_solo_level:				{ pid: 'UserPatch%Patch_0%6'	},
	od_ds_effect_level:				{ pid: 'UserPatch%Patch_0%7'	},
	od_ds_direct_mix:				{ pid: 'UserPatch%Patch_0%8'	},
//	od_ds_custom_type:				{ pid: 'UserPatch%Patch_0%9'	},
//	od_ds_custom_bottom:			{ pid: 'UserPatch%Patch_0%10'	},
//	od_ds_custom_top:				{ pid: 'UserPatch%Patch_0%11'	},
//	od_ds_custom_low:				{ pid: 'UserPatch%Patch_0%12'	},
//	od_ds_custom_high:				{ pid: 'UserPatch%Patch_0%13'	},
//	od_ds_custom_character:			{ pid: 'UserPatch%Patch_0%14'	},
//	preamp_a_on_off:				{ pid: 'UserPatch%Patch_0%16'	},
	preamp_a_type:					{ pid: 'UserPatch%Patch_0%17'	},
	preamp_a_gain:					{ pid: 'UserPatch%Patch_0%18'	},
//	preamp_a_t_comp:				{ pid: 'UserPatch%Patch_0%19'	},
	preamp_a_bass:					{ pid: 'UserPatch%Patch_0%20'	},
	preamp_a_middle:				{ pid: 'UserPatch%Patch_0%21'	},
	preamp_a_treble:				{ pid: 'UserPatch%Patch_0%22'	},
	preamp_a_presence:				{ pid: 'UserPatch%Patch_0%23'	},
	preamp_a_level:					{ pid: 'UserPatch%Patch_0%24'	},
	preamp_a_bright:				{ pid: 'UserPatch%Patch_0%25'	},
//	preamp_a_gain_sw:				{ pid: 'UserPatch%Patch_0%26'	},
	preamp_a_solo_sw:				{ pid: 'UserPatch%Patch_0%27'	},
	preamp_a_solo_level:			{ pid: 'UserPatch%Patch_0%28'	},
//	preamp_a_sp_type:				{ pid: 'UserPatch%'	},
//	preamp_a_mic_type:				{ pid: 'UserPatch%'	},
//	preamp_a_mic_dis:				{ pid: 'UserPatch%'	},
//	preamp_a_mic_pos:				{ pid: 'UserPatch%'	},
//	preamp_a_mic_level:				{ pid: 'UserPatch%'	},
//	preamp_a_direct_mix:			{ pid: 'UserPatch%'	},
//	preamp_a_custom_type:			{ pid: 'UserPatch%'	},
//	preamp_a_custom_bottom:			{ pid: 'UserPatch%'	},
//	preamp_a_custom_edge:			{ pid: 'UserPatch%'	},
//	preamp_a_custom_preamp_low:		{ pid: 'UserPatch%'	},
//	preamp_a_custom_preamp_high:	{ pid: 'UserPatch%'	},
//	preamp_a_custom_char:			{ pid: 'UserPatch%'	},
//	preamp_a_custom_sp_size:		{ pid: 'UserPatch%'	},
//	preamp_a_custom_sp_color_low:	{ pid: 'UserPatch%'	},
//	preamp_a_custom_sp_color_high:	{ pid: 'UserPatch%'	},
//	preamp_a_custom_sp_num:			{ pid: 'UserPatch%'	},
//	preamp_a_custom_sp_cabinet:		{ pid: 'UserPatch%'	},
//	preamp_b_on_off:				{ pid: 'UserPatch%'	},
//	preamp_b_type:					{ pid: 'UserPatch%'	},
//	preamp_b_gain:					{ pid: 'UserPatch%'	},
//	preamp_b_t_comp:				{ pid: 'UserPatch%'	},
//	preamp_b_bass:					{ pid: 'UserPatch%'	},
//	preamp_b_middle:				{ pid: 'UserPatch%'	},
//	preamp_b_treble:				{ pid: 'UserPatch%'	},
//	preamp_b_presence:				{ pid: 'UserPatch%'	},
//	preamp_b_level:					{ pid: 'UserPatch%'	},
//	preamp_b_bright:				{ pid: 'UserPatch%'	},
//	preamp_b_gain_sw:				{ pid: 'UserPatch%'	},
//	preamp_b_solo_sw:				{ pid: 'UserPatch%'	},
//	preamp_b_solo_level:			{ pid: 'UserPatch%'	},
//	preamp_b_sp_type:				{ pid: 'UserPatch%'	},
//	preamp_b_mic_type:				{ pid: 'UserPatch%'	},
//	preamp_b_mic_dis:				{ pid: 'UserPatch%'	},
//	preamp_b_mic_pos:				{ pid: 'UserPatch%'	},
//	preamp_b_mic_level:				{ pid: 'UserPatch%'	},
//	preamp_b_direct_mix:			{ pid: 'UserPatch%'	},
//	preamp_b_custom_type:			{ pid: 'UserPatch%'	},
//	preamp_b_custom_bottom:			{ pid: 'UserPatch%'	},
//	preamp_b_custom_edge:			{ pid: 'UserPatch%'	},
//	preamp_b_custom_preamp_low:		{ pid: 'UserPatch%'	},
//	preamp_b_custom_preamp_high:	{ pid: 'UserPatch%'	},
//	preamp_b_custom_char:			{ pid: 'UserPatch%'	},
//	preamp_b_custom_sp_size:		{ pid: 'UserPatch%'	},
//	preamp_b_custom_sp_color_low:	{ pid: 'UserPatch%'	},
//	preamp_b_custom_sp_color_high:	{ pid: 'UserPatch%'	},
//	preamp_b_custom_sp_num:			{ pid: 'UserPatch%'	},
//	preamp_b_custom_sp_cabinet:		{ pid: 'UserPatch%'	},
	eq_on_off:						{ pid: 'UserPatch%Patch_0%48'	},
	eq_low_cut:						{ pid: 'UserPatch%Patch_0%50'	},
	eq_low_gain:					{ pid: 'UserPatch%Patch_0%51'	},
	eq_low_mid_freq:				{ pid: 'UserPatch%Patch_0%52'	},
	eq_low_mid_q:					{ pid: 'UserPatch%Patch_0%53'	},
	eq_low_mid_gain:				{ pid: 'UserPatch%Patch_0%54'	},
	eq_high_mid_freq:				{ pid: 'UserPatch%Patch_0%55'	},
	eq_high_mid_q:					{ pid: 'UserPatch%Patch_0%56'	},
	eq_high_mid_gain:				{ pid: 'UserPatch%Patch_0%57'	},
	eq_high_gain:					{ pid: 'UserPatch%Patch_0%58'	},
	eq_high_cut:					{ pid: 'UserPatch%Patch_0%59'	},
	eq_level:						{ pid: 'UserPatch%Patch_0%60'	},
	fx1_on_off:						{ pid: 'UserPatch%Fx(1)%0'	},
	fx1_fx_type:					{ pid: 'UserPatch%Fx(1)%1'	},
//	fx1_sub_od_ds_type:				{ pid: 'UserPatch%'	},
//	fx1_sub_od_ds_drive:			{ pid: 'UserPatch%'	},
//	fx1_sub_od_ds_bottom:			{ pid: 'UserPatch%'	},
//	fx1_sub_od_ds_tone:				{ pid: 'UserPatch%'	},
//	fx1_sub_od_ds_solo_sw:			{ pid: 'UserPatch%'	},
//	fx1_sub_od_ds_solo_level:		{ pid: 'UserPatch%'	},
//	fx1_sub_od_ds_effect_level:		{ pid: 'UserPatch%'	},
//	fx1_sub_od_ds_direct_mix:		{ pid: 'UserPatch%'	},
	fx1_t_wah_mode:					{ pid: 'UserPatch%Fx(1)%2'	},
	fx1_t_wah_polar:				{ pid: 'UserPatch%Fx(1)%3'	},
	fx1_t_wah_sens:					{ pid: 'UserPatch%Fx(1)%4'	},
	fx1_t_wah_freq:					{ pid: 'UserPatch%Fx(1)%5'	},
	fx1_t_wah_peak:					{ pid: 'UserPatch%Fx(1)%6'	},
	fx1_t_wah_direct_mix:			{ pid: 'UserPatch%Fx(1)%7'	},
	fx1_t_wah_effect_level:			{ pid: 'UserPatch%Fx(1)%8'	},
	fx1_auto_wah_mode:				{ pid: 'UserPatch%Fx(1)%9'	},
	fx1_auto_wah_freq:				{ pid: 'UserPatch%Fx(1)%10'	},
	fx1_auto_wah_peak:				{ pid: 'UserPatch%Fx(1)%11'	},
	fx1_auto_wah_rate:				{ pid: 'UserPatch%Fx(1)%12'	},
	fx1_auto_wah_depth:				{ pid: 'UserPatch%Fx(1)%13'	},
	fx1_auto_wah_direct_mix:		{ pid: 'UserPatch%Fx(1)%14'	},
	fx1_auto_wah_effect_level:		{ pid: 'UserPatch%Fx(1)%15'	},
	fx1_sub_wah_type:				{ pid: 'UserPatch%Fx(1)%16'	},
	fx1_sub_wah_pedal_pos:			{ pid: 'UserPatch%Fx(1)%17'	},
	fx1_sub_wah_pedal_min:			{ pid: 'UserPatch%Fx(1)%18'	},
	fx1_sub_wah_pedal_max:			{ pid: 'UserPatch%Fx(1)%19'	},
	fx1_sub_wah_effect_level:		{ pid: 'UserPatch%Fx(1)%20'	},
	fx1_sub_wah_direct_mix:			{ pid: 'UserPatch%Fx(1)%21'	},
	fx1_adv_comp_type:				{ pid: 'UserPatch%Fx(1)%22'	},
	fx1_adv_comp_sustain:			{ pid: 'UserPatch%Fx(1)%23'	},
	fx1_adv_comp_attack:			{ pid: 'UserPatch%Fx(1)%24'	},
	fx1_adv_comp_tone:				{ pid: 'UserPatch%Fx(1)%25'	},
	fx1_adv_comp_level:				{ pid: 'UserPatch%Fx(1)%26'	},
	fx1_limiter_type:				{ pid: 'UserPatch%Fx(1)%27'	},
	fx1_limiter_attack:				{ pid: 'UserPatch%Fx(1)%28'	},
	fx1_limiter_thresh:				{ pid: 'UserPatch%Fx(1)%29'	},
	fx1_limiter_ratio:				{ pid: 'UserPatch%Fx(1)%30'	},
	fx1_limiter_release:			{ pid: 'UserPatch%Fx(1)%31'	},
	fx1_limiter_level:				{ pid: 'UserPatch%Fx(1)%32'	},
	fx1_graphic_eq_31hz:			{ pid: 'UserPatch%Fx(1)%33'	},
	fx1_graphic_eq_62hz:			{ pid: 'UserPatch%Fx(1)%34'	},
	fx1_graphic_eq_125hz:			{ pid: 'UserPatch%Fx(1)%35'	},
	fx1_graphic_eq_250hz:			{ pid: 'UserPatch%Fx(1)%36'	},
	fx1_graphic_eq_500hz:			{ pid: 'UserPatch%Fx(1)%37'	},
	fx1_graphic_eq_1khz:			{ pid: 'UserPatch%Fx(1)%38'	},
	fx1_graphic_eq_2khz:			{ pid: 'UserPatch%Fx(1)%39'	},
	fx1_graphic_eq_4khz:			{ pid: 'UserPatch%Fx(1)%40'	},
	fx1_graphic_eq_8khz:			{ pid: 'UserPatch%Fx(1)%41'	},
	fx1_graphic_eq_16khz:			{ pid: 'UserPatch%Fx(1)%42'	},
	fx1_graphic_eq_level:			{ pid: 'UserPatch%Fx(1)%43'	},
	fx1_parametric_eq_low_cut:		{ pid: 'UserPatch%Fx(1)%44'	},
	fx1_parametric_eq_low_gain:		{ pid: 'UserPatch%Fx(1)%45'	},
	fx1_parametric_eq_low_mid_freq:	{ pid: 'UserPatch%Fx(1)%46'	},
	fx1_parametric_eq_low_mid_q:	{ pid: 'UserPatch%Fx(1)%47'	},
	fx1_parametric_eq_low_mid_gain:	{ pid: 'UserPatch%Fx(1)%48'	},
	fx1_parametric_eq_high_mid_freq:{ pid: 'UserPatch%Fx(1)%49'	},
	fx1_parametric_eq_high_mid_q:	{ pid: 'UserPatch%Fx(1)%50'	},
	fx1_parametric_eq_high_mid_gain:{ pid: 'UserPatch%Fx(1)%51'	},
	fx1_parametric_eq_high_gain:	{ pid: 'UserPatch%Fx(1)%52'	},
	fx1_parametric_eq_high_cut:		{ pid: 'UserPatch%Fx(1)%53'	},
	fx1_parametric_eq_level:		{ pid: 'UserPatch%Fx(1)%54'	},
//	fx1_tone_modify_type:			{ pid: 'UserPatch%'	},
//	fx1_tone_modify_reso:			{ pid: 'UserPatch%'	},
//	fx1_tone_modify_low:			{ pid: 'UserPatch%'	},
//	fx1_tone_modify_high:			{ pid: 'UserPatch%'	},
//	fx1_tone_modify_level:			{ pid: 'UserPatch%'	},
	fx1_guitar_sim_type:			{ pid: 'UserPatch%Fx(1)%55'	},
	fx1_guitar_sim_low:				{ pid: 'UserPatch%Fx(1)%56'	},
	fx1_guitar_sim_high:			{ pid: 'UserPatch%Fx(1)%57'	},
	fx1_guitar_sim_level:			{ pid: 'UserPatch%Fx(1)%58'	},
	fx1_guitar_sim_body:			{ pid: 'UserPatch%Fx(1)%59'	},
	fx1_slow_gear_sens:				{ pid: 'UserPatch%Fx(1)%60'	},
	fx1_slow_gear_rise_time:		{ pid: 'UserPatch%Fx(1)%61'	},
	fx1_slow_gear_level:			{ pid: 'UserPatch%Fx(1)%62'	},
//	fx1_defretter_tone:				{ pid: 'UserPatch%'	},
//	fx1_defretter_sens:				{ pid: 'UserPatch%'	},
//	fx1_defretter_attack:			{ pid: 'UserPatch%'	},
//	fx1_defretter_depth:			{ pid: 'UserPatch%'	},
//	fx1_defretter_reso:				{ pid: 'UserPatch%'	},
//	fx1_defretter_effect_level:		{ pid: 'UserPatch%'	},
//	fx1_defretter_direct_mix:		{ pid: 'UserPatch%'	},
	fx1_wave_synth_wave:			{ pid: 'UserPatch%Fx(1)%63'	},
	fx1_wave_synth_cutoff:			{ pid: 'UserPatch%Fx(1)%64'	},
	fx1_wave_synth_reso:			{ pid: 'UserPatch%Fx(1)%65'	},
	fx1_wave_synth_filter_sens:		{ pid: 'UserPatch%Fx(1)%66'	},
	fx1_wave_synth_filter_decay:	{ pid: 'UserPatch%Fx(1)%67'	},
	fx1_wave_synth_filter_depth:	{ pid: 'UserPatch%Fx(1)%68'	},
	fx1_wave_synth_synth_level:		{ pid: 'UserPatch%Fx(1)%69'	},
	fx1_wave_synth_direct_mix:		{ pid: 'UserPatch%Fx(1)%70'	},
//	fx1_sitar_sim_tone:				{ pid: 'UserPatch%'	},
//	fx1_sitar_sim_sens:				{ pid: 'UserPatch%'	},
//	fx1_sitar_sim_depth:			{ pid: 'UserPatch%'	},
//	fx1_sitar_sim_reso:				{ pid: 'UserPatch%'	},
//	fx1_sitar_sim_buzz:				{ pid: 'UserPatch%'	},
//	fx1_sitar_sim_effect_level:		{ pid: 'UserPatch%'	},
//	fx1_sitar_sim_direct_mix:		{ pid: 'UserPatch%'	},
	fx1_octave_range:				{ pid: 'UserPatch%Fx(1)%71'	},
	fx1_octave_level:				{ pid: 'UserPatch%Fx(1)%72'	},
	fx1_octave_direct_mix:			{ pid: 'UserPatch%Fx(1)%73'	},
	fx1_pitch_shifter_voice:		{ pid: 'UserPatch%Fx(1)%74'	},
	fx1_pitch_shifter_ps1mode:		{ pid: 'UserPatch%Fx(1)%75'	},
	fx1_pitch_shifter_ps1pitch:		{ pid: 'UserPatch%Fx(1)%76'	},
	fx1_pitch_shifter_ps1fine:		{ pid: 'UserPatch%Fx(1)%77'	},
	fx1_pitch_shifter_ps1pre_dly_l:	{ pid: 'UserPatch%Fx(1)%79'	},
	fx1_pitch_shifter_ps1pre_dly_h:	{ pid: 'UserPatch%Fx(1)%78'	},
	fx1_pitch_shifter_ps1level:		{ pid: 'UserPatch%Fx(1)%80'	},
	fx1_pitch_shifter_ps2mode:		{ pid: 'UserPatch%Fx(1)%81'	},
	fx1_pitch_shifter_ps2pitch:		{ pid: 'UserPatch%Fx(1)%82'	},
	fx1_pitch_shifter_ps2fine:		{ pid: 'UserPatch%Fx(1)%83'	},
	fx1_pitch_shifter_ps2pre_dly_l:	{ pid: 'UserPatch%Fx(1)%85'	},
	fx1_pitch_shifter_ps2pre_dly_h:	{ pid: 'UserPatch%Fx(1)%84'	},
	fx1_pitch_shifter_ps2level:		{ pid: 'UserPatch%Fx(1)%86'	},
	fx1_pitch_shifter_ps1f_back:	{ pid: 'UserPatch%Fx(1)%87'	},
	fx1_pitch_shifter_direct_mix:	{ pid: 'UserPatch%Fx(1)%88'	},
	fx1_harmonist_voice:			{ pid: 'UserPatch%Fx(1)%89'	},
	fx1_harmonist_hr1harm:			{ pid: 'UserPatch%Fx(1)%90'	},
	fx1_harmonist_hr1pre_dly_l:		{ pid: 'UserPatch%Fx(1)%92'	},
	fx1_harmonist_hr1pre_dly_h:		{ pid: 'UserPatch%Fx(1)%91'	},
	fx1_harmonist_hr1level:			{ pid: 'UserPatch%Fx(1)%93'	},
	fx1_harmonist_hr2harm:			{ pid: 'UserPatch%Fx(1)%94'	},
	fx1_harmonist_hr2pre_dly_l:		{ pid: 'UserPatch%Fx(1)%96'	},
	fx1_harmonist_hr2pre_dly_h:		{ pid: 'UserPatch%Fx(1)%95'	},
	fx1_harmonist_hr2level:			{ pid: 'UserPatch%Fx(1)%97'	},
	fx1_harmonist_hr1f_back:		{ pid: 'UserPatch%Fx(1)%98'	},
	fx1_harmonist_direct_mix:		{ pid: 'UserPatch%Fx(1)%99'	},
	fx1_harmonist_hr1c:				{ pid: 'UserPatch%Fx(1)%100'	},
	fx1_harmonist_hr1db:			{ pid: 'UserPatch%Fx(1)%101'	},
	fx1_harmonist_hr1d:				{ pid: 'UserPatch%Fx(1)%102'	},
	fx1_harmonist_hr1eb:			{ pid: 'UserPatch%Fx(1)%103'	},
	fx1_harmonist_hr1e:				{ pid: 'UserPatch%Fx(1)%104'	},
	fx1_harmonist_hr1f:				{ pid: 'UserPatch%Fx(1)%105'	},
	fx1_harmonist_hr1f_s:			{ pid: 'UserPatch%Fx(1)%106'	},
	fx1_harmonist_hr1g:				{ pid: 'UserPatch%Fx(1)%107'	},
	fx1_harmonist_hr1ab:			{ pid: 'UserPatch%Fx(1)%108'	},
	fx1_harmonist_hr1a:				{ pid: 'UserPatch%Fx(1)%109'	},
	fx1_harmonist_hr1bb:			{ pid: 'UserPatch%Fx(1)%110'	},
	fx1_harmonist_hr1b:				{ pid: 'UserPatch%Fx(1)%111'	},
	fx1_harmonist_hr2c:				{ pid: 'UserPatch%Fx(1)%112'	},
	fx1_harmonist_hr2db:			{ pid: 'UserPatch%Fx(1)%113'	},
	fx1_harmonist_hr2d:				{ pid: 'UserPatch%Fx(1)%114'	},
	fx1_harmonist_hr2eb:			{ pid: 'UserPatch%Fx(1)%115'	},
	fx1_harmonist_hr2e:				{ pid: 'UserPatch%Fx(1)%116'	},
	fx1_harmonist_hr2f:				{ pid: 'UserPatch%Fx(1)%117'	},
	fx1_harmonist_hr2f_s:			{ pid: 'UserPatch%Fx(1)%118'	},
	fx1_harmonist_hr2g:				{ pid: 'UserPatch%Fx(1)%119'	},
	fx1_harmonist_hr2ab:			{ pid: 'UserPatch%Fx(1)%120'	},
	fx1_harmonist_hr2a:				{ pid: 'UserPatch%Fx(1)%121'	},
	fx1_harmonist_hr2bb:			{ pid: 'UserPatch%Fx(1)%122'	},
	fx1_harmonist_hr2b:				{ pid: 'UserPatch%Fx(1)%123'	},
//	fx1_sound_hold_hold:			{ pid: 'UserPatch%'	},
//	fx1_sound_hold_rise_time:		{ pid: 'UserPatch%'	},
//	fx1_sound_hold_effect_level:	{ pid: 'UserPatch%'	},
	fx1_ac_processor_type:			{ pid: 'UserPatch%Fx(1)%124'	},
	fx1_ac_processor_bass:			{ pid: 'UserPatch%Fx(1)%125'	},
	fx1_ac_processor_middle:		{ pid: 'UserPatch%Fx(1)%126'	},
	fx1_ac_processor_middle_freq:	{ pid: 'UserPatch%Fx(1)%127'	},
	fx1_ac_processor_treble:		{ pid: 'UserPatch%Fx(1)%128'	},
	fx1_ac_processor_presence:		{ pid: 'UserPatch%Fx(1)%129'	},
	fx1_ac_processor_level:			{ pid: 'UserPatch%Fx(1)%130'	},
	fx1_phaser_type:				{ pid: 'UserPatch%Fx(1)%131'	},
	fx1_phaser_rate:				{ pid: 'UserPatch%Fx(1)%132'	},
	fx1_phaser_depth:				{ pid: 'UserPatch%Fx(1)%133'	},
	fx1_phaser_manual:				{ pid: 'UserPatch%Fx(1)%134'	},
	fx1_phaser_reso:				{ pid: 'UserPatch%Fx(1)%135'	},
	fx1_phaser_step_rate:			{ pid: 'UserPatch%Fx(1)%136'	},
	fx1_phaser_effect_level:		{ pid: 'UserPatch%Fx(1)%137'	},
	fx1_phaser_direct_mix:			{ pid: 'UserPatch%Fx(1)%138'	},
	fx1_flanger_rate:				{ pid: 'UserPatch%Fx(1)%139'	},
	fx1_flanger_depth:				{ pid: 'UserPatch%Fx(1)%140'	},
	fx1_flanger_manual:				{ pid: 'UserPatch%Fx(1)%141'	},
	fx1_flanger_reso:				{ pid: 'UserPatch%Fx(1)%142'	},
//	fx1_flanger_separation:			{ pid: 'UserPatch%Fx(1)%143'	},
	fx1_flanger_low_cut:			{ pid: 'UserPatch%Fx(1)%144'	},
	fx1_flanger_effect_level:		{ pid: 'UserPatch%Fx(1)%145'	},
	fx1_flanger_direct_mix:			{ pid: 'UserPatch%Fx(1)%146'	},
	fx1_tremolo_wave_shape:			{ pid: 'UserPatch%Fx(1)%147'	},
	fx1_tremolo_rate:				{ pid: 'UserPatch%Fx(1)%148'	},
	fx1_tremolo_depth:				{ pid: 'UserPatch%Fx(1)%149'	},
	fx1_tremolo_level:				{ pid: 'UserPatch%Fx(1)%150'	},
//	fx1_rotary_speed_select:		{ pid: 'UserPatch%Fx(1)%151'	},
//	fx1_rotary_rate_slow:			{ pid: 'UserPatch%Fx(1)%152'	},
	fx1_rotary_rate_fast:			{ pid: 'UserPatch%Fx(1)%153'	},
//	fx1_rotary_rise_time:			{ pid: 'UserPatch%Fx(1)%154'	},
//	fx1_rotary_fall_time:			{ pid: 'UserPatch%Fx(1)%155'	},
	fx1_rotary_depth:				{ pid: 'UserPatch%Fx(1)%156'	},
	fx1_rotary_level:				{ pid: 'UserPatch%Fx(1)%157'	},
	fx1_uni_v_rate:					{ pid: 'UserPatch%Fx(1)%158'	},
	fx1_uni_v_depth:				{ pid: 'UserPatch%Fx(1)%159'	},
	fx1_uni_v_level:				{ pid: 'UserPatch%Fx(1)%160'	},
//	fx1_pan_type:					{ pid: 'UserPatch%'	},
//	fx1_pan_pos:					{ pid: 'UserPatch%'	},
//	fx1_pan_wave_shape:				{ pid: 'UserPatch%'	},
//	fx1_pan_rate:					{ pid: 'UserPatch%'	},
//	fx1_pan_depth:					{ pid: 'UserPatch%'	},
//	fx1_pan_level:					{ pid: 'UserPatch%'	},
	fx1_slicer_pattern:				{ pid: 'UserPatch%Fx(1)%161'	},
	fx1_slicer_rate:				{ pid: 'UserPatch%Fx(1)%162'	},
	fx1_slicer_trigger_sens:		{ pid: 'UserPatch%Fx(1)%163'	},
	fx1_slicer_effect_level:		{ pid: 'UserPatch%Fx(1)%164'	},
	fx1_slicer_direct_mix:			{ pid: 'UserPatch%Fx(1)%165'	},
	fx1_vibrato_rate:				{ pid: 'UserPatch%Fx(1)%166'	},
	fx1_vibrato_depth:				{ pid: 'UserPatch%Fx(1)%167'	},
//	fx1_vibrato_trigger:			{ pid: 'UserPatch%Fx(1)%168'	},
//	fx1_vibrato_rise_time:			{ pid: 'UserPatch%Fx(1)%169'	},
	fx1_vibrato_level:				{ pid: 'UserPatch%Fx(1)%170'	},
	fx1_ring_mod_mode:				{ pid: 'UserPatch%Fx(1)%171'	},
	fx1_ring_mod_freq:				{ pid: 'UserPatch%Fx(1)%172'	},
	fx1_ring_mod_effect_level:		{ pid: 'UserPatch%Fx(1)%173'	},
	fx1_ring_mod_direct_mix:		{ pid: 'UserPatch%Fx(1)%174'	},
	fx1_humanizer_mode:				{ pid: 'UserPatch%Fx(1)%175'	},
	fx1_humanizer_vowel1:			{ pid: 'UserPatch%Fx(1)%176'	},
	fx1_humanizer_vowel2:			{ pid: 'UserPatch%Fx(1)%177'	},
	fx1_humanizer_sens:				{ pid: 'UserPatch%Fx(1)%178'	},
	fx1_humanizer_rate:				{ pid: 'UserPatch%Fx(1)%179'	},
	fx1_humanizer_depth:			{ pid: 'UserPatch%Fx(1)%180'	},
	fx1_humanizer_manual:			{ pid: 'UserPatch%Fx(1)%181'	},
	fx1_humanizer_level:			{ pid: 'UserPatch%Fx(1)%182'	},
	fx1_2x2_chorus_xover_freq:		{ pid: 'UserPatch%Fx(1)%183'	},
	fx1_2x2_chorus_low_rate:		{ pid: 'UserPatch%Fx(1)%184'	},
	fx1_2x2_chorus_low_depth:		{ pid: 'UserPatch%Fx(1)%185'	},
	fx1_2x2_chorus_low_pre_delay:	{ pid: 'UserPatch%Fx(1)%186'	},
	fx1_2x2_chorus_low_level:		{ pid: 'UserPatch%Fx(1)%187'	},
	fx1_2x2_chorus_high_rate:		{ pid: 'UserPatch%Fx(1)%188'	},
	fx1_2x2_chorus_high_depth:		{ pid: 'UserPatch%Fx(1)%189'	},
	fx1_2x2_chorus_high_pre_delay:	{ pid: 'UserPatch%Fx(1)%190'	},
	fx1_2x2_chorus_high_level:		{ pid: 'UserPatch%Fx(1)%191'	},
	fx1_2x2_chorus_direct_level:	{ pid: 'UserPatch%Fx(1)%192'	},
//	fx1_sub_delay_type:				{ pid: 'UserPatch%'	},
//	fx1_sub_delay_time_l:			{ pid: 'UserPatch%'	},
//	fx1_sub_delay_time_h:			{ pid: 'UserPatch%'	},
//	fx1_sub_delay_f_back:			{ pid: 'UserPatch%'	},
//	fx1_sub_delay_high_cut:			{ pid: 'UserPatch%'	},
//	fx1_sub_delay_effect_level:		{ pid: 'UserPatch%'	},
//	fx1_sub_delay_direct_mix:		{ pid: 'UserPatch%'	},
//	fx1_sub_delay_tap_time:			{ pid: 'UserPatch%'	},
	fx2_on_off:						{ pid: 'UserPatch%Fx(2)%0'	},
	fx2_fx_type:					{ pid: 'UserPatch%Fx(2)%1'	},
//	fx2_sub_od_ds_type:				{ pid: 'UserPatch%'	},
//	fx2_sub_od_ds_drive:			{ pid: 'UserPatch%'	},
//	fx2_sub_od_ds_bottom:			{ pid: 'UserPatch%'	},
//	fx2_sub_od_ds_tone:				{ pid: 'UserPatch%'	},
//	fx2_sub_od_ds_solo_sw:			{ pid: 'UserPatch%'	},
//	fx2_sub_od_ds_solo_level:		{ pid: 'UserPatch%'	},
//	fx2_sub_od_ds_effect_level:		{ pid: 'UserPatch%'	},
//	fx2_sub_od_ds_direct_mix:		{ pid: 'UserPatch%'	},
	fx2_t_wah_mode:					{ pid: 'UserPatch%Fx(2)%2'	},
	fx2_t_wah_polar:				{ pid: 'UserPatch%Fx(2)%3'	},
	fx2_t_wah_sens:					{ pid: 'UserPatch%Fx(2)%4'	},
	fx2_t_wah_freq:					{ pid: 'UserPatch%Fx(2)%5'	},
	fx2_t_wah_peak:					{ pid: 'UserPatch%Fx(2)%6'	},
	fx2_t_wah_direct_mix:			{ pid: 'UserPatch%Fx(2)%7'	},
	fx2_t_wah_effect_level:			{ pid: 'UserPatch%Fx(2)%8'	},
	fx2_auto_wah_mode:				{ pid: 'UserPatch%Fx(2)%9'	},
	fx2_auto_wah_freq:				{ pid: 'UserPatch%Fx(2)%10'	},
	fx2_auto_wah_peak:				{ pid: 'UserPatch%Fx(2)%11'	},
	fx2_auto_wah_rate:				{ pid: 'UserPatch%Fx(2)%12'	},
	fx2_auto_wah_depth:				{ pid: 'UserPatch%Fx(2)%13'	},
	fx2_auto_wah_direct_mix:		{ pid: 'UserPatch%Fx(2)%14'	},
	fx2_auto_wah_effect_level:		{ pid: 'UserPatch%Fx(2)%15'	},
	fx2_sub_wah_type:				{ pid: 'UserPatch%Fx(2)%16'	},
	fx2_sub_wah_pedal_pos:			{ pid: 'UserPatch%Fx(2)%17'	},
	fx2_sub_wah_pedal_min:			{ pid: 'UserPatch%Fx(2)%18'	},
	fx2_sub_wah_pedal_max:			{ pid: 'UserPatch%Fx(2)%19'	},
	fx2_sub_wah_effect_level:		{ pid: 'UserPatch%Fx(2)%20'	},
	fx2_sub_wah_direct_mix:			{ pid: 'UserPatch%Fx(2)%21'	},
	fx2_adv_comp_type:				{ pid: 'UserPatch%Fx(2)%22'	},
	fx2_adv_comp_sustain:			{ pid: 'UserPatch%Fx(2)%23'	},
	fx2_adv_comp_attack:			{ pid: 'UserPatch%Fx(2)%24'	},
	fx2_adv_comp_tone:				{ pid: 'UserPatch%Fx(2)%25'	},
	fx2_adv_comp_level:				{ pid: 'UserPatch%Fx(2)%26'	},
	fx2_limiter_type:				{ pid: 'UserPatch%Fx(2)%27'	},
	fx2_limiter_attack:				{ pid: 'UserPatch%Fx(2)%28'	},
	fx2_limiter_thresh:				{ pid: 'UserPatch%Fx(2)%29'	},
	fx2_limiter_ratio:				{ pid: 'UserPatch%Fx(2)%30'	},
	fx2_limiter_release:			{ pid: 'UserPatch%Fx(2)%31'	},
	fx2_limiter_level:				{ pid: 'UserPatch%Fx(2)%32'	},
	fx2_graphic_eq_31hz:			{ pid: 'UserPatch%Fx(2)%33'	},
	fx2_graphic_eq_62hz:			{ pid: 'UserPatch%Fx(2)%34'	},
	fx2_graphic_eq_125hz:			{ pid: 'UserPatch%Fx(2)%35'	},
	fx2_graphic_eq_250hz:			{ pid: 'UserPatch%Fx(2)%36'	},
	fx2_graphic_eq_500hz:			{ pid: 'UserPatch%Fx(2)%37'	},
	fx2_graphic_eq_1khz:			{ pid: 'UserPatch%Fx(2)%38'	},
	fx2_graphic_eq_2khz:			{ pid: 'UserPatch%Fx(2)%39'	},
	fx2_graphic_eq_4khz:			{ pid: 'UserPatch%Fx(2)%40'	},
	fx2_graphic_eq_8khz:			{ pid: 'UserPatch%Fx(2)%41'	},
	fx2_graphic_eq_16khz:			{ pid: 'UserPatch%Fx(2)%42'	},
	fx2_graphic_eq_level:			{ pid: 'UserPatch%Fx(2)%43'	},
	fx2_parametric_eq_low_cut:		{ pid: 'UserPatch%Fx(2)%44'	},
	fx2_parametric_eq_low_gain:		{ pid: 'UserPatch%Fx(2)%45'	},
	fx2_parametric_eq_low_mid_freq:	{ pid: 'UserPatch%Fx(2)%46'	},
	fx2_parametric_eq_low_mid_q:	{ pid: 'UserPatch%Fx(2)%47'	},
	fx2_parametric_eq_low_mid_gain:	{ pid: 'UserPatch%Fx(2)%48'	},
	fx2_parametric_eq_high_mid_freq:{ pid: 'UserPatch%Fx(2)%49'	},
	fx2_parametric_eq_high_mid_q:	{ pid: 'UserPatch%Fx(2)%50'	},
	fx2_parametric_eq_high_mid_gain:{ pid: 'UserPatch%Fx(2)%51'	},
	fx2_parametric_eq_high_gain:	{ pid: 'UserPatch%Fx(2)%52'	},
	fx2_parametric_eq_high_cut:		{ pid: 'UserPatch%Fx(2)%53'	},
	fx2_parametric_eq_level:		{ pid: 'UserPatch%Fx(2)%54'	},
//	fx2_tone_modify_type:			{ pid: 'UserPatch%'	},
//	fx2_tone_modify_reso:			{ pid: 'UserPatch%'	},
//	fx2_tone_modify_low:			{ pid: 'UserPatch%'	},
//	fx2_tone_modify_high:			{ pid: 'UserPatch%'	},
//	fx2_tone_modify_level:			{ pid: 'UserPatch%'	},
	fx2_guitar_sim_type:			{ pid: 'UserPatch%Fx(2)%55'	},
	fx2_guitar_sim_low:				{ pid: 'UserPatch%Fx(2)%56'	},
	fx2_guitar_sim_high:			{ pid: 'UserPatch%Fx(2)%57'	},
	fx2_guitar_sim_level:			{ pid: 'UserPatch%Fx(2)%58'	},
	fx2_guitar_sim_body:			{ pid: 'UserPatch%Fx(2)%59'	},
	fx2_slow_gear_sens:				{ pid: 'UserPatch%Fx(2)%60'	},
	fx2_slow_gear_rise_time:		{ pid: 'UserPatch%Fx(2)%61'	},
	fx2_slow_gear_level:			{ pid: 'UserPatch%Fx(2)%62'	},
//	fx2_defretter_tone:				{ pid: 'UserPatch%'	},
//	fx2_defretter_sens:				{ pid: 'UserPatch%'	},
//	fx2_defretter_attack:			{ pid: 'UserPatch%'	},
//	fx2_defretter_depth:			{ pid: 'UserPatch%'	},
//	fx2_defretter_reso:				{ pid: 'UserPatch%'	},
//	fx2_defretter_effect_level:		{ pid: 'UserPatch%'	},
//	fx2_defretter_direct_mix:		{ pid: 'UserPatch%'	},
	fx2_wave_synth_wave:			{ pid: 'UserPatch%Fx(2)%63'	},
	fx2_wave_synth_cutoff:			{ pid: 'UserPatch%Fx(2)%64'	},
	fx2_wave_synth_reso:			{ pid: 'UserPatch%Fx(2)%65'	},
	fx2_wave_synth_filter_sens:		{ pid: 'UserPatch%Fx(2)%66'	},
	fx2_wave_synth_filter_decay:	{ pid: 'UserPatch%Fx(2)%67'	},
	fx2_wave_synth_filter_depth:	{ pid: 'UserPatch%Fx(2)%68'	},
	fx2_wave_synth_synth_level:		{ pid: 'UserPatch%Fx(2)%69'	},
	fx2_wave_synth_direct_mix:		{ pid: 'UserPatch%Fx(2)%70'	},
//	fx2_sitar_sim_tone:				{ pid: 'UserPatch%'	},
//	fx2_sitar_sim_sens:				{ pid: 'UserPatch%'	},
//	fx2_sitar_sim_depth:			{ pid: 'UserPatch%'	},
//	fx2_sitar_sim_reso:				{ pid: 'UserPatch%'	},
//	fx2_sitar_sim_buzz:				{ pid: 'UserPatch%'	},
//	fx2_sitar_sim_effect_level:		{ pid: 'UserPatch%'	},
//	fx2_sitar_sim_direct_mix:		{ pid: 'UserPatch%'	},
	fx2_octave_range:				{ pid: 'UserPatch%Fx(2)%71'	},
	fx2_octave_level:				{ pid: 'UserPatch%Fx(2)%72'	},
	fx2_octave_direct_mix:			{ pid: 'UserPatch%Fx(2)%73'	},
	fx2_pitch_shifter_voice:		{ pid: 'UserPatch%Fx(2)%74'	},
	fx2_pitch_shifter_ps1mode:		{ pid: 'UserPatch%Fx(2)%75'	},
	fx2_pitch_shifter_ps1pitch:		{ pid: 'UserPatch%Fx(2)%76'	},
	fx2_pitch_shifter_ps1fine:		{ pid: 'UserPatch%Fx(2)%77'	},
	fx2_pitch_shifter_ps1pre_dly_l:	{ pid: 'UserPatch%Fx(2)%79'	},
	fx2_pitch_shifter_ps1pre_dly_h:	{ pid: 'UserPatch%Fx(2)%78'	},
	fx2_pitch_shifter_ps1level:		{ pid: 'UserPatch%Fx(2)%80'	},
	fx2_pitch_shifter_ps2mode:		{ pid: 'UserPatch%Fx(2)%81'	},
	fx2_pitch_shifter_ps2pitch:		{ pid: 'UserPatch%Fx(2)%82'	},
	fx2_pitch_shifter_ps2fine:		{ pid: 'UserPatch%Fx(2)%83'	},
	fx2_pitch_shifter_ps2pre_dly_l:	{ pid: 'UserPatch%Fx(2)%85'	},
	fx2_pitch_shifter_ps2pre_dly_h:	{ pid: 'UserPatch%Fx(2)%84'	},
	fx2_pitch_shifter_ps2level:		{ pid: 'UserPatch%Fx(2)%86'	},
	fx2_pitch_shifter_ps1f_back:	{ pid: 'UserPatch%Fx(2)%87'	},
	fx2_pitch_shifter_direct_mix:	{ pid: 'UserPatch%Fx(2)%88'	},
	fx2_harmonist_voice:			{ pid: 'UserPatch%Fx(2)%89'	},
	fx2_harmonist_hr1harm:			{ pid: 'UserPatch%Fx(2)%90'	},
	fx2_harmonist_hr1pre_dly_l:		{ pid: 'UserPatch%Fx(2)%92'	},
	fx2_harmonist_hr1pre_dly_h:		{ pid: 'UserPatch%Fx(2)%91'	},
	fx2_harmonist_hr1level:			{ pid: 'UserPatch%Fx(2)%93'	},
	fx2_harmonist_hr2harm:			{ pid: 'UserPatch%Fx(2)%94'	},
	fx2_harmonist_hr2pre_dly_l:		{ pid: 'UserPatch%Fx(2)%96'	},
	fx2_harmonist_hr2pre_dly_h:		{ pid: 'UserPatch%Fx(2)%95'	},
	fx2_harmonist_hr2level:			{ pid: 'UserPatch%Fx(2)%97'	},
	fx2_harmonist_hr1f_back:		{ pid: 'UserPatch%Fx(2)%98'	},
	fx2_harmonist_direct_mix:		{ pid: 'UserPatch%Fx(2)%99'	},
	fx2_harmonist_hr1c:				{ pid: 'UserPatch%Fx(2)%100'	},
	fx2_harmonist_hr1db:			{ pid: 'UserPatch%Fx(2)%101'	},
	fx2_harmonist_hr1d:				{ pid: 'UserPatch%Fx(2)%102'	},
	fx2_harmonist_hr1eb:			{ pid: 'UserPatch%Fx(2)%103'	},
	fx2_harmonist_hr1e:				{ pid: 'UserPatch%Fx(2)%104'	},
	fx2_harmonist_hr1f:				{ pid: 'UserPatch%Fx(2)%105'	},
	fx2_harmonist_hr1f_s:			{ pid: 'UserPatch%Fx(2)%106'	},
	fx2_harmonist_hr1g:				{ pid: 'UserPatch%Fx(2)%107'	},
	fx2_harmonist_hr1ab:			{ pid: 'UserPatch%Fx(2)%108'	},
	fx2_harmonist_hr1a:				{ pid: 'UserPatch%Fx(2)%109'	},
	fx2_harmonist_hr1bb:			{ pid: 'UserPatch%Fx(2)%110'	},
	fx2_harmonist_hr1b:				{ pid: 'UserPatch%Fx(2)%111'	},
	fx2_harmonist_hr2c:				{ pid: 'UserPatch%Fx(2)%112'	},
	fx2_harmonist_hr2db:			{ pid: 'UserPatch%Fx(2)%113'	},
	fx2_harmonist_hr2d:				{ pid: 'UserPatch%Fx(2)%114'	},
	fx2_harmonist_hr2eb:			{ pid: 'UserPatch%Fx(2)%115'	},
	fx2_harmonist_hr2e:				{ pid: 'UserPatch%Fx(2)%116'	},
	fx2_harmonist_hr2f:				{ pid: 'UserPatch%Fx(2)%117'	},
	fx2_harmonist_hr2f_s:			{ pid: 'UserPatch%Fx(2)%118'	},
	fx2_harmonist_hr2g:				{ pid: 'UserPatch%Fx(2)%119'	},
	fx2_harmonist_hr2ab:			{ pid: 'UserPatch%Fx(2)%120'	},
	fx2_harmonist_hr2a:				{ pid: 'UserPatch%Fx(2)%121'	},
	fx2_harmonist_hr2bb:			{ pid: 'UserPatch%Fx(2)%122'	},
	fx2_harmonist_hr2b:				{ pid: 'UserPatch%Fx(2)%123'	},
//	fx2_sound_hold_hold:			{ pid: 'UserPatch%'	},
//	fx2_sound_hold_rise_time:		{ pid: 'UserPatch%'	},
//	fx2_sound_hold_effect_level:	{ pid: 'UserPatch%'	},
	fx2_ac_processor_type:			{ pid: 'UserPatch%Fx(2)%124'	},
	fx2_ac_processor_bass:			{ pid: 'UserPatch%Fx(2)%125'	},
	fx2_ac_processor_middle:		{ pid: 'UserPatch%Fx(2)%126'	},
	fx2_ac_processor_middle_freq:	{ pid: 'UserPatch%Fx(2)%127'	},
	fx2_ac_processor_treble:		{ pid: 'UserPatch%Fx(2)%128'	},
	fx2_ac_processor_presence:		{ pid: 'UserPatch%Fx(2)%129'	},
	fx2_ac_processor_level:			{ pid: 'UserPatch%Fx(2)%130'	},
	fx2_phaser_type:				{ pid: 'UserPatch%Fx(2)%131'	},
	fx2_phaser_rate:				{ pid: 'UserPatch%Fx(2)%132'	},
	fx2_phaser_depth:				{ pid: 'UserPatch%Fx(2)%133'	},
	fx2_phaser_manual:				{ pid: 'UserPatch%Fx(2)%134'	},
	fx2_phaser_reso:				{ pid: 'UserPatch%Fx(2)%135'	},
	fx2_phaser_step_rate:			{ pid: 'UserPatch%Fx(2)%136'	},
	fx2_phaser_effect_level:		{ pid: 'UserPatch%Fx(2)%137'	},
	fx2_phaser_direct_mix:			{ pid: 'UserPatch%Fx(2)%138'	},
	fx2_flanger_rate:				{ pid: 'UserPatch%Fx(2)%139'	},
	fx2_flanger_depth:				{ pid: 'UserPatch%Fx(2)%140'	},
	fx2_flanger_manual:				{ pid: 'UserPatch%Fx(2)%141'	},
	fx2_flanger_reso:				{ pid: 'UserPatch%Fx(2)%142'	},
//	fx2_flanger_separation:			{ pid: 'UserPatch%Fx(2)%143'	},
	fx2_flanger_low_cut:			{ pid: 'UserPatch%Fx(2)%144'	},
	fx2_flanger_effect_level:		{ pid: 'UserPatch%Fx(2)%145'	},
	fx2_flanger_direct_mix:			{ pid: 'UserPatch%Fx(2)%146'	},
	fx2_tremolo_wave_shape:			{ pid: 'UserPatch%Fx(2)%147'	},
	fx2_tremolo_rate:				{ pid: 'UserPatch%Fx(2)%148'	},
	fx2_tremolo_depth:				{ pid: 'UserPatch%Fx(2)%149'	},
	fx2_tremolo_level:				{ pid: 'UserPatch%Fx(2)%150'	},
//	fx2_rotary_speed_select:		{ pid: 'UserPatch%Fx(2)%151'	},
//	fx2_rotary_rate_slow:			{ pid: 'UserPatch%Fx(2)%152'	},
	fx2_rotary_rate_fast:			{ pid: 'UserPatch%Fx(2)%153'	},
//	fx2_rotary_rise_time:			{ pid: 'UserPatch%Fx(2)%154'	},
//	fx2_rotary_fall_time:			{ pid: 'UserPatch%Fx(2)%155'	},
	fx2_rotary_depth:				{ pid: 'UserPatch%Fx(2)%156'	},
	fx2_rotary_level:				{ pid: 'UserPatch%Fx(2)%157'	},
	fx2_uni_v_rate:					{ pid: 'UserPatch%Fx(2)%158'	},
	fx2_uni_v_depth:				{ pid: 'UserPatch%Fx(2)%159'	},
	fx2_uni_v_level:				{ pid: 'UserPatch%Fx(2)%160'	},
//	fx2_pan_type:					{ pid: 'UserPatch%'	},
//	fx2_pan_pos:					{ pid: 'UserPatch%'	},
//	fx2_pan_wave_shape:				{ pid: 'UserPatch%'	},
//	fx2_pan_rate:					{ pid: 'UserPatch%'	},
//	fx2_pan_depth:					{ pid: 'UserPatch%'	},
//	fx2_pan_level:					{ pid: 'UserPatch%'	},
	fx2_slicer_pattern:				{ pid: 'UserPatch%Fx(2)%161'	},
	fx2_slicer_rate:				{ pid: 'UserPatch%Fx(2)%162'	},
	fx2_slicer_trigger_sens:		{ pid: 'UserPatch%Fx(2)%163'	},
	fx2_slicer_effect_level:		{ pid: 'UserPatch%Fx(2)%164'	},
	fx2_slicer_direct_mix:			{ pid: 'UserPatch%Fx(2)%165'	},
	fx2_vibrato_rate:				{ pid: 'UserPatch%Fx(2)%166'	},
	fx2_vibrato_depth:				{ pid: 'UserPatch%Fx(2)%167'	},
//	fx2_vibrato_trigger:			{ pid: 'UserPatch%Fx(2)%168'	},
//	fx2_vibrato_rise_time:			{ pid: 'UserPatch%Fx(2)%169'	},
	fx2_vibrato_level:				{ pid: 'UserPatch%Fx(2)%170'	},
	fx2_ring_mod_mode:				{ pid: 'UserPatch%Fx(2)%171'	},
	fx2_ring_mod_freq:				{ pid: 'UserPatch%Fx(2)%172'	},
	fx2_ring_mod_effect_level:		{ pid: 'UserPatch%Fx(2)%173'	},
	fx2_ring_mod_direct_mix:		{ pid: 'UserPatch%Fx(2)%174'	},
	fx2_humanizer_mode:				{ pid: 'UserPatch%Fx(2)%175'	},
	fx2_humanizer_vowel1:			{ pid: 'UserPatch%Fx(2)%176'	},
	fx2_humanizer_vowel2:			{ pid: 'UserPatch%Fx(2)%177'	},
	fx2_humanizer_sens:				{ pid: 'UserPatch%Fx(2)%178'	},
	fx2_humanizer_rate:				{ pid: 'UserPatch%Fx(2)%179'	},
	fx2_humanizer_depth:			{ pid: 'UserPatch%Fx(2)%180'	},
	fx2_humanizer_manual:			{ pid: 'UserPatch%Fx(2)%181'	},
	fx2_humanizer_level:			{ pid: 'UserPatch%Fx(2)%182'	},
	fx2_2x2_chorus_xover_freq:		{ pid: 'UserPatch%Fx(2)%183'	},
	fx2_2x2_chorus_low_rate:		{ pid: 'UserPatch%Fx(2)%184'	},
	fx2_2x2_chorus_low_depth:		{ pid: 'UserPatch%Fx(2)%185'	},
	fx2_2x2_chorus_low_pre_delay:	{ pid: 'UserPatch%Fx(2)%186'	},
	fx2_2x2_chorus_low_level:		{ pid: 'UserPatch%Fx(2)%187'	},
	fx2_2x2_chorus_high_rate:		{ pid: 'UserPatch%Fx(2)%188'	},
	fx2_2x2_chorus_high_depth:		{ pid: 'UserPatch%Fx(2)%189'	},
	fx2_2x2_chorus_high_pre_delay:	{ pid: 'UserPatch%Fx(2)%190'	},
	fx2_2x2_chorus_high_level:		{ pid: 'UserPatch%Fx(2)%191'	},
	fx2_2x2_chorus_direct_level:	{ pid: 'UserPatch%Fx(2)%192'	},
//	fx2_sub_delay_type:				{ pid: 'UserPatch%'	},
//	fx2_sub_delay_time_l:			{ pid: 'UserPatch%'	},
//	fx2_sub_delay_time_h:			{ pid: 'UserPatch%'	},
//	fx2_sub_delay_f_back:			{ pid: 'UserPatch%'	},
//	fx2_sub_delay_high_cut:			{ pid: 'UserPatch%'	},
//	fx2_sub_delay_effect_level:		{ pid: 'UserPatch%'	},
//	fx2_sub_delay_direct_mix:		{ pid: 'UserPatch%'	},
//	fx2_sub_delay_tap_time:			{ pid: 'UserPatch%'	},
	delay_on_off:					{ pid: 'UserPatch%Delay(1)%0'	},
	delay_type:						{ pid: 'UserPatch%Delay(1)%1'	},
	delay_delay_time_l:				{ pid: 'UserPatch%Delay(1)%3'	},
	delay_delay_time_h:				{ pid: 'UserPatch%Delay(1)%2'	},
	delay_f_back:					{ pid: 'UserPatch%Delay(1)%4'	},
	delay_high_cut:					{ pid: 'UserPatch%Delay(1)%5'	},
	delay_effect_level:				{ pid: 'UserPatch%Delay(1)%6'	},
	delay_direct_mix:				{ pid: 'UserPatch%Delay(1)%7'	},
	delay_tap_time:					{ pid: 'UserPatch%Delay(1)%8'	},
//	delay_d1_time_l:				{ pid: 'UserPatch%Delay(1)%10'	},
//	delay_d1_time_h:				{ pid: 'UserPatch%Delay(1)%9'	},
//	delay_d1_f_back:				{ pid: 'UserPatch%Delay(1)%11'	},
//	delay_d1_hi_cut:				{ pid: 'UserPatch%Delay(1)%12'	},
//	delay_d1_level:					{ pid: 'UserPatch%Delay(1)%13'	},
//	delay_d2_time_l:				{ pid: 'UserPatch%Delay(1)%15'	},
//	delay_d2_time_h:				{ pid: 'UserPatch%Delay(1)%14'	},
//	delay_d2_f_back:				{ pid: 'UserPatch%Delay(1)%16'	},
//	delay_d2_hi_cut:				{ pid: 'UserPatch%Delay(1)%17'	},
//	delay_d2_level:					{ pid: 'UserPatch%Delay(1)%18'	},
	delay_mod_rate:					{ pid: 'UserPatch%Delay(1)%19'	},
	delay_mod_depth:				{ pid: 'UserPatch%Delay(1)%20'	},
//	chorus_on_off:					{ pid: 'UserPatch%'	},
//	chorus_mode:					{ pid: 'UserPatch%'	},
//	chorus_rate:					{ pid: 'UserPatch%'	},
//	chorus_depth:					{ pid: 'UserPatch%'	},
//	chorus_pre_delay:				{ pid: 'UserPatch%'	},
//	chorus_low_cut:					{ pid: 'UserPatch%'	},
//	chorus_high_cut:				{ pid: 'UserPatch%'	},
//	chorus_effect_level:			{ pid: 'UserPatch%'	},
//	chorus_direct_level:			{ pid: 'UserPatch%'	},
	reverb_on_off:					{ pid: 'UserPatch%Patch_1%0'	},
	reverb_type:					{ pid: 'UserPatch%Patch_1%1'	},
	reverb_time:					{ pid: 'UserPatch%Patch_1%2'	},
	reverb_pre_delay_l:				{ pid: 'UserPatch%Patch_1%4'	},
	reverb_pre_delay_h:				{ pid: 'UserPatch%Patch_1%3'	},
	reverb_low_cut:					{ pid: 'UserPatch%Patch_1%5'	},
	reverb_high_cut:				{ pid: 'UserPatch%Patch_1%6'	},
	reverb_density:					{ pid: 'UserPatch%Patch_1%7'	},
	reverb_effect_level:			{ pid: 'UserPatch%Patch_1%8'	},
	reverb_direct_mix:				{ pid: 'UserPatch%Patch_1%9'	},
//	reverb_spring_sens:				{ pid: 'UserPatch%Patch_1%10'	},
//	pedal_fx_on_off:					{ pid: 'UserPatch%'	},
//	pedal_fx_pedal_bend_pitch:			{ pid: 'UserPatch%'	},
//	pedal_fx_pedal_bend_position:		{ pid: 'UserPatch%'	},
//	pedal_fx_pedal_bend_effect_level:	{ pid: 'UserPatch%'	},
//	pedal_fx_pedal_bend_direct_mix:		{ pid: 'UserPatch%'	},
//	pedal_fx_wah_type:					{ pid: 'UserPatch%'	},
//	pedal_fx_wah_position:				{ pid: 'UserPatch%'	},
//	pedal_fx_wah_pedal_min:				{ pid: 'UserPatch%'	},
//	pedal_fx_wah_pedal_max:				{ pid: 'UserPatch%'	},
//	pedal_fx_wah_effect_level:			{ pid: 'UserPatch%'	},
//	pedal_fx_wah_direct_mix:			{ pid: 'UserPatch%'	},
//	foot_volume_volume_curve:		{ pid: 'UserPatch%'	},
//	foot_volume_volume_min:			{ pid: 'UserPatch%'	},
//	foot_volume_volume_max:			{ pid: 'UserPatch%'	},
//	foot_volume_level:				{ pid: 'UserPatch%'	},
//	divider_mode:					{ pid: 'UserPatch%'	},
//	divider_ch_select:				{ pid: 'UserPatch%'	},
//	divider_ch_a_dynamic:			{ pid: 'UserPatch%'	},
//	divider_ch_a_dynamic_sens:		{ pid: 'UserPatch%'	},
//	divider_ch_a_filter:			{ pid: 'UserPatch%'	},
//	divider_ch_a_cutoff_freq:		{ pid: 'UserPatch%'	},
//	divider_ch_b_dynamic:			{ pid: 'UserPatch%'	},
//	divider_ch_b_dynamic_sens:		{ pid: 'UserPatch%'	},
//	divider_ch_b_filter:			{ pid: 'UserPatch%'	},
//	divider_ch_b_cutoff_freq:		{ pid: 'UserPatch%'	},
//	mixer_mode:						{ pid: 'UserPatch%'	},
//	mixer_ch_a_b_balance:			{ pid: 'UserPatch%'	},
//	mixer_spread:					{ pid: 'UserPatch%'	},
	send_return_on_off:				{ pid: 'UserPatch%Patch_1%34'	},
	send_return_mode:				{ pid: 'UserPatch%Patch_1%35'	},
	send_return_send_level:			{ pid: 'UserPatch%Patch_1%36'	},
	send_return_return_level:		{ pid: 'UserPatch%Patch_1%37'	},
//	send_return_adjust:				{ pid: 'UserPatch%'	},
//	amp_control:					{ pid: 'UserPatch%'	},
	ns1_on_off:						{ pid: 'UserPatch%Patch_1%38'	},
	ns1_threshold:					{ pid: 'UserPatch%Patch_1%39'	},
	ns1_release:					{ pid: 'UserPatch%Patch_1%40'	},
//	ns1_detect:						{ pid: 'UserPatch%Patch_1%41'	},
//	ns2_on_off:						{ pid: 'UserPatch%'	},
//	ns2_threshold:					{ pid: 'UserPatch%'	},
//	ns2_release:					{ pid: 'UserPatch%'	},
//	ns2_detect:						{ pid: 'UserPatch%'	},
//	accel_fx_type:					{ pid: 'UserPatch%'	},
//	accel_fx_s_bend_pitch:			{ pid: 'UserPatch%'	},
//	accel_fx_s_bend_rise_time:		{ pid: 'UserPatch%'	},
//	accel_fx_s_bend_fall_time:		{ pid: 'UserPatch%'	},
//	accel_fx_laser_beam_rate:		{ pid: 'UserPatch%'	},
//	accel_fx_laser_beam_depth:		{ pid: 'UserPatch%'	},
//	accel_fx_laser_beam_rise_time:	{ pid: 'UserPatch%'	},
//	accel_fx_laser_beam_fall_time:	{ pid: 'UserPatch%'	},
//	accel_fx_ring_mod_freq:			{ pid: 'UserPatch%'	},
//	accel_fx_ring_mod_rise_time:	{ pid: 'UserPatch%'	},
//	accel_fx_ring_mod_fall_time:	{ pid: 'UserPatch%'	},
//	accel_fx_ring_mod_ring_level:	{ pid: 'UserPatch%'	},
//	accel_fx_ring_mod_octave_level:	{ pid: 'UserPatch%'	},
//	accel_fx_ring_mod_direct_mix:	{ pid: 'UserPatch%'	},
//	accel_fx_twist_level:			{ pid: 'UserPatch%'	},
//	accel_fx_twist_rise_time:		{ pid: 'UserPatch%'	},
//	accel_fx_twist_fall_time:		{ pid: 'UserPatch%'	},
//	accel_fx_warp_level:			{ pid: 'UserPatch%'	},
//	accel_fx_warp_rise_time:		{ pid: 'UserPatch%'	},
//	accel_fx_warp_fall_time:		{ pid: 'UserPatch%'	},
//	accel_fx_feedbacker_mode:				{ pid: 'UserPatch%'	},
//	accel_fx_feedbacker_depth:				{ pid: 'UserPatch%'	},
//	accel_fx_feedbacker_rise_time:			{ pid: 'UserPatch%'	},
//	accel_fx_feedbacker_octave_rise_time:	{ pid: 'UserPatch%'	},
//	accel_fx_feedbacker_f_back_level:		{ pid: 'UserPatch%'	},
//	accel_fx_feedbacker_octave_f_back_level:{ pid: 'UserPatch%'	},
//	accel_fx_feedbacker_vib_rate:			{ pid: 'UserPatch%'	},
//	accel_fx_feedbacker_vib_depth:			{ pid: 'UserPatch%'	},
//	patch_category:					{ pid: 'UserPatch%'	},
//	patch_level:					{ pid: 'UserPatch%'	},
//	master_eq_low_gain:				{ pid: 'UserPatch%'	},
//	master_eq_mid_freq:				{ pid: 'UserPatch%'	},
//	master_eq_mid_q:				{ pid: 'UserPatch%'	},
//	master_eq_mid_gain:				{ pid: 'UserPatch%'	},
//	master_eq_high_gain:			{ pid: 'UserPatch%'	},
//	master_bpm_l:					{ pid: 'UserPatch%'	},
//	master_bpm_h:					{ pid: 'UserPatch%'	},
	master_key:						{ pid: 'UserPatch%Patch_1%49'	},
//	master_beat:					{ pid: 'UserPatch%'	},
//	pitch_detection:				{ pid: 'UserPatch%'	},
//	fx_chain_position1:				{ pid: 'UserPatch%'	},
//	fx_chain_position2:				{ pid: 'UserPatch%'	},
//	fx_chain_position3:				{ pid: 'UserPatch%'	},
//	fx_chain_position4:				{ pid: 'UserPatch%'	},
//	fx_chain_position5:				{ pid: 'UserPatch%'	},
//	fx_chain_position6:				{ pid: 'UserPatch%'	},
//	fx_chain_position7:				{ pid: 'UserPatch%'	},
//	fx_chain_position8:				{ pid: 'UserPatch%'	},
//	fx_chain_position9:				{ pid: 'UserPatch%'	},
//	fx_chain_position10:			{ pid: 'UserPatch%'	},
//	fx_chain_position11:			{ pid: 'UserPatch%'	},
//	fx_chain_position12:			{ pid: 'UserPatch%'	},
//	fx_chain_position13:			{ pid: 'UserPatch%'	},
//	fx_chain_position14:			{ pid: 'UserPatch%'	},
//	fx_chain_position15:			{ pid: 'UserPatch%'	},
//	fx_chain_position16:			{ pid: 'UserPatch%'	},
//	fx_chain_position17:			{ pid: 'UserPatch%'	},
//	fx_chain_position18:			{ pid: 'UserPatch%'	},
//	fx_chain_position19:			{ pid: 'UserPatch%'	},
//	fx_chain_position20:			{ pid: 'UserPatch%'	},
//	manual_mode_bank_down:			{ pid: 'UserPatch%'	},
//	manual_mode_bank_up:			{ pid: 'UserPatch%'	},
//	manual_mode_number_pedal1:		{ pid: 'UserPatch%'	},
//	manual_mode_number_pedal2:		{ pid: 'UserPatch%'	},
//	manual_mode_number_pedal3:		{ pid: 'UserPatch%'	},
//	manual_mode_number_pedal4:		{ pid: 'UserPatch%'	},
//	manual_mode_phrase_loop:		{ pid: 'UserPatch%'	},
//	manual_mode_accel_ctrl:			{ pid: 'UserPatch%'	},
//	ctl_exp_accel_ctl_func:			{ pid: 'UserPatch%'	},
//	ctl_exp_accel_ctl_min:			{ pid: 'UserPatch%'	},
//	ctl_exp_accel_ctl_max:			{ pid: 'UserPatch%'	},
//	ctl_exp_accel_ctl_src_mode:		{ pid: 'UserPatch%'	},
//	ctl_exp_exp_sw_func:			{ pid: 'UserPatch%'	},
//	ctl_exp_exp_sw_min:				{ pid: 'UserPatch%'	},
//	ctl_exp_exp_sw_max:				{ pid: 'UserPatch%'	},
//	ctl_exp_exp_sw_src_mode:		{ pid: 'UserPatch%'	},
//	ctl_exp_sub_ctl1_func:			{ pid: 'UserPatch%'	},
//	ctl_exp_sub_ctl1_min:			{ pid: 'UserPatch%'	},
//	ctl_exp_sub_ctl1_max:			{ pid: 'UserPatch%'	},
//	ctl_exp_sub_ctl1_src_mode:		{ pid: 'UserPatch%'	},
//	ctl_exp_sub_ctl2_func:			{ pid: 'UserPatch%'	},
//	ctl_exp_sub_ctl2_min:			{ pid: 'UserPatch%'	},
//	ctl_exp_sub_ctl2_max:			{ pid: 'UserPatch%'	},
//	ctl_exp_sub_ctl2_src_mode:		{ pid: 'UserPatch%'	},
//	ctl_exp_exp_func:				{ pid: 'UserPatch%'	},
//	ctl_exp_exp_patch_level_min:	{ pid: 'UserPatch%'	},
//	ctl_exp_exp_patch_level_max:	{ pid: 'UserPatch%'	},
//	ctl_exp_sub_exp_func:			{ pid: 'UserPatch%'	},
//	ctl_exp_sub_exp_patch_level_min:{ pid: 'UserPatch%'	},
//	ctl_exp_sub_exp_patch_level_max:{ pid: 'UserPatch%'	},
//	assign1_on_off:					{ pid: 'UserPatch%'	},
//	assign1_target_l:				{ pid: 'UserPatch%'	},
//	assign1_target_h:				{ pid: 'UserPatch%'	},
//	assign1_target_min_l:			{ pid: 'UserPatch%'	},
//	assign1_target_min_h:			{ pid: 'UserPatch%'	},
//	assign1_target_max_l:			{ pid: 'UserPatch%'	},
//	assign1_target_max_h:			{ pid: 'UserPatch%'	},
//	assign1_source:					{ pid: 'UserPatch%'	},
//	assign1_source_mode:			{ pid: 'UserPatch%'	},
//	assign1_act_range_lo:			{ pid: 'UserPatch%'	},
//	assign1_act_range_hi:			{ pid: 'UserPatch%'	},
//	assign1_int_pdl_trigger:		{ pid: 'UserPatch%'	},
//	assign1_int_pdl_time:			{ pid: 'UserPatch%'	},
//	assign1_int_pdl_curve:			{ pid: 'UserPatch%'	},
//	assign1_wave_rate:				{ pid: 'UserPatch%'	},
//	assign1_waveform:				{ pid: 'UserPatch%'	},
//	assign2_on_off:					{ pid: 'UserPatch%'	},
//	assign2_target_l:				{ pid: 'UserPatch%'	},
//	assign2_target_h:				{ pid: 'UserPatch%'	},
//	assign2_target_min_l:			{ pid: 'UserPatch%'	},
//	assign2_target_min_h:			{ pid: 'UserPatch%'	},
//	assign2_target_max_l:			{ pid: 'UserPatch%'	},
//	assign2_target_max_h:			{ pid: 'UserPatch%'	},
//	assign2_source:					{ pid: 'UserPatch%'	},
//	assign2_source_mode:			{ pid: 'UserPatch%'	},
//	assign2_act_range_lo:			{ pid: 'UserPatch%'	},
//	assign2_act_range_hi:			{ pid: 'UserPatch%'	},
//	assign2_int_pdl_trigger:		{ pid: 'UserPatch%'	},
//	assign2_int_pdl_time:			{ pid: 'UserPatch%'	},
//	assign2_int_pdl_curve:			{ pid: 'UserPatch%'	},
//	assign2_wave_rate:				{ pid: 'UserPatch%'	},
//	assign2_waveform:				{ pid: 'UserPatch%'	},
//	assign3_on_off:					{ pid: 'UserPatch%'	},
//	assign3_target_l:				{ pid: 'UserPatch%'	},
//	assign3_target_h:				{ pid: 'UserPatch%'	},
//	assign3_target_min_l:			{ pid: 'UserPatch%'	},
//	assign3_target_min_h:			{ pid: 'UserPatch%'	},
//	assign3_target_max_l:			{ pid: 'UserPatch%'	},
//	assign3_target_max_h:			{ pid: 'UserPatch%'	},
//	assign3_source:					{ pid: 'UserPatch%'	},
//	assign3_source_mode:			{ pid: 'UserPatch%'	},
//	assign3_act_range_lo:			{ pid: 'UserPatch%'	},
//	assign3_act_range_hi:			{ pid: 'UserPatch%'	},
//	assign3_int_pdl_trigger:		{ pid: 'UserPatch%'	},
//	assign3_int_pdl_time:			{ pid: 'UserPatch%'	},
//	assign3_int_pdl_curve:			{ pid: 'UserPatch%'	},
//	assign3_wave_rate:				{ pid: 'UserPatch%'	},
//	assign3_waveform:				{ pid: 'UserPatch%'	},
//	assign4_on_off:					{ pid: 'UserPatch%'	},
//	assign4_target_l:				{ pid: 'UserPatch%'	},
//	assign4_target_h:				{ pid: 'UserPatch%'	},
//	assign4_target_min_l:			{ pid: 'UserPatch%'	},
//	assign4_target_min_h:			{ pid: 'UserPatch%'	},
//	assign4_target_max_l:			{ pid: 'UserPatch%'	},
//	assign4_target_max_h:			{ pid: 'UserPatch%'	},
//	assign4_source:					{ pid: 'UserPatch%'	},
//	assign4_source_mode:			{ pid: 'UserPatch%'	},
//	assign4_act_range_lo:			{ pid: 'UserPatch%'	},
//	assign4_act_range_hi:			{ pid: 'UserPatch%'	},
//	assign4_int_pdl_trigger:		{ pid: 'UserPatch%'	},
//	assign4_int_pdl_time:			{ pid: 'UserPatch%'	},
//	assign4_int_pdl_curve:			{ pid: 'UserPatch%'	},
//	assign4_wave_rate:				{ pid: 'UserPatch%'	},
//	assign4_waveform:				{ pid: 'UserPatch%'	},
//	assign5_on_off:					{ pid: 'UserPatch%'	},
//	assign5_target_l:				{ pid: 'UserPatch%'	},
//	assign5_target_h:				{ pid: 'UserPatch%'	},
//	assign5_target_min_l:			{ pid: 'UserPatch%'	},
//	assign5_target_min_h:			{ pid: 'UserPatch%'	},
//	assign5_target_max_l:			{ pid: 'UserPatch%'	},
//	assign5_target_max_h:			{ pid: 'UserPatch%'	},
//	assign5_source:					{ pid: 'UserPatch%'	},
//	assign5_source_mode:			{ pid: 'UserPatch%'	},
//	assign5_act_range_lo:			{ pid: 'UserPatch%'	},
//	assign5_act_range_hi:			{ pid: 'UserPatch%'	},
//	assign5_int_pdl_trigger:		{ pid: 'UserPatch%'	},
//	assign5_int_pdl_time:			{ pid: 'UserPatch%'	},
//	assign5_int_pdl_curve:			{ pid: 'UserPatch%'	},
//	assign5_wave_rate:				{ pid: 'UserPatch%'	},
//	assign5_waveform:				{ pid: 'UserPatch%'	},
//	assign6_on_off:					{ pid: 'UserPatch%'	},
//	assign6_target_l:				{ pid: 'UserPatch%'	},
//	assign6_target_h:				{ pid: 'UserPatch%'	},
//	assign6_target_min_l:			{ pid: 'UserPatch%'	},
//	assign6_target_min_h:			{ pid: 'UserPatch%'	},
//	assign6_target_max_l:			{ pid: 'UserPatch%'	},
//	assign6_target_max_h:			{ pid: 'UserPatch%'	},
//	assign6_source:					{ pid: 'UserPatch%'	},
//	assign6_source_mode:			{ pid: 'UserPatch%'	},
//	assign6_act_range_lo:			{ pid: 'UserPatch%'	},
//	assign6_act_range_hi:			{ pid: 'UserPatch%'	},
//	assign6_int_pdl_trigger:		{ pid: 'UserPatch%'	},
//	assign6_int_pdl_time:			{ pid: 'UserPatch%'	},
//	assign6_int_pdl_curve:			{ pid: 'UserPatch%'	},
//	assign6_wave_rate:				{ pid: 'UserPatch%'	},
//	assign6_waveform:				{ pid: 'UserPatch%'	},
//	assign7_on_off:					{ pid: 'UserPatch%'	},
//	assign7_target_l:				{ pid: 'UserPatch%'	},
//	assign7_target_h:				{ pid: 'UserPatch%'	},
//	assign7_target_min_l:			{ pid: 'UserPatch%'	},
//	assign7_target_min_h:			{ pid: 'UserPatch%'	},
//	assign7_target_max_l:			{ pid: 'UserPatch%'	},
//	assign7_target_max_h:			{ pid: 'UserPatch%'	},
//	assign7_source:					{ pid: 'UserPatch%'	},
//	assign7_source_mode:			{ pid: 'UserPatch%'	},
//	assign7_act_range_lo:			{ pid: 'UserPatch%'	},
//	assign7_act_range_hi:			{ pid: 'UserPatch%'	},
//	assign7_int_pdl_trigger:		{ pid: 'UserPatch%'	},
//	assign7_int_pdl_time:			{ pid: 'UserPatch%'	},
//	assign7_int_pdl_curve:			{ pid: 'UserPatch%'	},
//	assign7_wave_rate:				{ pid: 'UserPatch%'	},
//	assign7_waveform:				{ pid: 'UserPatch%'	},
//	assign8_on_off:					{ pid: 'UserPatch%'	},
//	assign8_target_l:				{ pid: 'UserPatch%'	},
//	assign8_target_h:				{ pid: 'UserPatch%'	},
//	assign8_target_min_l:			{ pid: 'UserPatch%'	},
//	assign8_target_min_h:			{ pid: 'UserPatch%'	},
//	assign8_target_max_l:			{ pid: 'UserPatch%'	},
//	assign8_target_max_h:			{ pid: 'UserPatch%'	},
//	assign8_source:					{ pid: 'UserPatch%'	},
//	assign8_source_mode:			{ pid: 'UserPatch%'	},
//	assign8_act_range_lo:			{ pid: 'UserPatch%'	},
//	assign8_act_range_hi:			{ pid: 'UserPatch%'	},
//	assign8_int_pdl_trigger:		{ pid: 'UserPatch%'	},
//	assign8_int_pdl_time:			{ pid: 'UserPatch%'	},
//	assign8_int_pdl_curve:			{ pid: 'UserPatch%'	},
//	assign8_wave_rate:				{ pid: 'UserPatch%'	},
//	assign8_waveform:				{ pid: 'UserPatch%'	},
//	assign_common_input_sens:		{ pid: 'UserPatch%'	},
	fx1_acsim_high:					{ pid: 'UserPatch%Fx(1)%193'	},
	fx1_acsim_body:					{ pid: 'UserPatch%Fx(1)%194'	},
	fx1_acsim_low:					{ pid: 'UserPatch%Fx(1)%195'	},
	fx1_acsim_level:				{ pid: 'UserPatch%Fx(1)%197'	},
//	fx1_rotary2_balance:			{ pid: 'UserPatch%'	},
//	fx1_rotary2_speed_sel:			{ pid: 'UserPatch%'	},
//	fx1_rotary2_rate_slow:			{ pid: 'UserPatch%'	},
//	fx1_rotary2_rate_fast:			{ pid: 'UserPatch%'	},
//	fx1_rotary2_risetime:			{ pid: 'UserPatch%'	},
//	fx1_rotary2_falltime:			{ pid: 'UserPatch%'	},
//	fx1_rotary2_depth:				{ pid: 'UserPatch%'	},
//	fx1_rotary2_level:				{ pid: 'UserPatch%'	},
//	fx1_rotary2_direct_mix:			{ pid: 'UserPatch%'	},
	fx2_acsim_high:					{ pid: 'UserPatch%'	},
	fx2_acsim_body:					{ pid: 'UserPatch%'	},
	fx2_acsim_low:					{ pid: 'UserPatch%'	},
	fx2_acsim_level:				{ pid: 'UserPatch%'	},
//	fx2_rotary2_balance:			{ pid: 'UserPatch%'	},
//	fx2_rotary2_speed_sel:			{ pid: 'UserPatch%'	},
//	fx2_rotary2_rate_slow:			{ pid: 'UserPatch%'	},
//	fx2_rotary2_rate_fast:			{ pid: 'UserPatch%'	},
//	fx2_rotary2_risetime:			{ pid: 'UserPatch%'	},
//	fx2_rotary2_falltime:			{ pid: 'UserPatch%'	},
//	fx2_rotary2_depth:				{ pid: 'UserPatch%'	},
//	fx2_rotary2_level:				{ pid: 'UserPatch%'	},
//	fx2_rotary2_direct_mix:			{ pid: 'UserPatch%'	},
//	prm_fx2_teraecho_mode:			{ pid: 'UserPatch%'	},
//	prm_fx2_teraecho_time:			{ pid: 'UserPatch%'	},
//	prm_fx2_teraecho_feedback:		{ pid: 'UserPatch%'	},
//	prm_fx2_teraecho_tone:			{ pid: 'UserPatch%'	},
//	prm_fx2_teraecho_effect_level:	{ pid: 'UserPatch%'	},
//	prm_fx2_teraecho_direct_mix:	{ pid: 'UserPatch%'	},
//	prm_fx2_teraecho_hold:			{ pid: 'UserPatch%'	},
//	prm_fx2_overtone_detune:		{ pid: 'UserPatch%'	},
//	prm_fx2_overtone_tone:			{ pid: 'UserPatch%'	},
//	prm_fx2_overtone_upper_level:	{ pid: 'UserPatch%'	},
//	prm_fx2_overtone_lower_level:	{ pid: 'UserPatch%'	},
//	prm_fx2_overtone_direct_level:	{ pid: 'UserPatch%'	},

	fx1_phaser90e_script:			{ pid: 'UserPatch%Fx(1)%198'	},
	fx1_phaser90e_speed:			{ pid: 'UserPatch%Fx(1)%199'	},
	fx1_flanger117e_manual:			{ pid: 'UserPatch%Fx(1)%200'	},
	fx1_flanger117e_width:			{ pid: 'UserPatch%Fx(1)%201'	},
	fx1_flanger117e_speed:			{ pid: 'UserPatch%Fx(1)%202'	},
	fx1_flanger117e_regen:			{ pid: 'UserPatch%Fx(1)%203'	},
	fx2_phaser90e_script:			{ pid: 'UserPatch%'	},
	fx2_phaser90e_speed:			{ pid: 'UserPatch%'	},
	fx2_flanger117e_manual:			{ pid: 'UserPatch%'	},
	fx2_flanger117e_width:			{ pid: 'UserPatch%'	},
	fx2_flanger117e_speed:			{ pid: 'UserPatch%'	},
	fx2_flanger117e_regen:			{ pid: 'UserPatch%'	},
	delay_vtg_lpf:					{ pid: 'UserPatch%Delay(1)%21'	},
	delay_vtg_filter:				{ pid: 'UserPatch%Delay(1)%22'	},
	delay_vtg_feedback_phase:		{ pid: 'UserPatch%Delay(1)%23'	},
	delay_vtg_effect_phase:			{ pid: 'UserPatch%Delay(1)%24'	},
	delay_vtg_mod_sw:				{ pid: 'UserPatch%Delay(1)%25'	},
	delay2_on_off:					{ pid: 'UserPatch%Delay(2)%0'	},
	delay2_type:					{ pid: 'UserPatch%Delay(2)%1'	},
	delay2_delay_time_l:			{ pid: 'UserPatch%Delay(2)%3'	},
	delay2_delay_time_h:			{ pid: 'UserPatch%Delay(2)%2'	},
	delay2_f_back:					{ pid: 'UserPatch%Delay(2)%4'	},
	delay2_high_cut:				{ pid: 'UserPatch%Delay(2)%5'	},
	delay2_effect_level:			{ pid: 'UserPatch%Delay(2)%6'	},
	delay2_direct_mix:				{ pid: 'UserPatch%Delay(2)%7'	},
	delay2_tap_time:				{ pid: 'UserPatch%Delay(2)%8'	},
//	delay2_d1_time_l:				{ pid: 'UserPatch%Delay(2)%10'	},
//	delay2_d1_time_h:				{ pid: 'UserPatch%Delay(2)%9'	},
//	delay2_d1_f_back:				{ pid: 'UserPatch%Delay(2)%11'	},
//	delay2_d1_hi_cut:				{ pid: 'UserPatch%Delay(2)%12'	},
//	delay2_d1_level:				{ pid: 'UserPatch%Delay(2)%13'	},
//	delay2_d2_time_l:				{ pid: 'UserPatch%Delay(2)%15'	},
//	delay2_d2_time_h:				{ pid: 'UserPatch%Delay(2)%14'	},
//	delay2_d2_f_back:				{ pid: 'UserPatch%Delay(2)%16'	},
//	delay2_d2_hi_cut:				{ pid: 'UserPatch%Delay(2)%17'	},
//	delay2_d2_level:				{ pid: 'UserPatch%Delay(2)%18'	},
	delay2_mod_rate:				{ pid: 'UserPatch%Delay(2)%19'	},
	delay2_mod_depth:				{ pid: 'UserPatch%Delay(2)%20'	},
	delay2_vtg_lpf:					{ pid: 'UserPatch%Delay(2)%21'	},
	delay2_vtg_filter:				{ pid: 'UserPatch%Delay(2)%22'	},
	delay2_vtg_feedback_phase:		{ pid: 'UserPatch%Delay(2)%23'	},
	delay2_vtg_effect_phase:		{ pid: 'UserPatch%Delay(2)%24'	},
	delay2_vtg_mod_sw:				{ pid: 'UserPatch%Delay(2)%25'	},

	fx1_wah95e_pedal_pos:			{ pid: 'UserPatch%Fx(1)%204'	},
	fx1_wah95e_pedal_min:			{ pid: 'UserPatch%Fx(1)%205'	},
	fx1_wah95e_pedal_max:			{ pid: 'UserPatch%Fx(1)%206'	},
	fx1_wah95e_effect_level:		{ pid: 'UserPatch%Fx(1)%207'	},
	fx1_wah95e_direct_mix:			{ pid: 'UserPatch%Fx(1)%208'	},
	fx1_dc30_selector:				{ pid: 'UserPatch%Fx(1)%209'	},
	fx1_dc30_input_volume:			{ pid: 'UserPatch%Fx(1)%210'	},
	fx1_dc30_chorus_intensity:		{ pid: 'UserPatch%Fx(1)%211'	},
	fx1_dc30_echo_repeat_rate_l:	{ pid: 'UserPatch%Fx(1)%213'	},
	fx1_dc30_echo_repeat_rate_h:	{ pid: 'UserPatch%Fx(1)%212'	},
	fx1_dc30_echo_intensity:		{ pid: 'UserPatch%Fx(1)%214'	},
	fx1_dc30_echo_volume:			{ pid: 'UserPatch%Fx(1)%215'	},
	fx1_dc30_tone:					{ pid: 'UserPatch%Fx(1)%216'	},
	fx1_dc30_output:				{ pid: 'UserPatch%Fx(1)%217'	},
	fx2_wah95e_pedal_pos:			{ pid: 'UserPatch%Fx(2)%204'	},
	fx2_wah95e_pedal_min:			{ pid: 'UserPatch%Fx(2)%205'	},
	fx2_wah95e_pedal_max:			{ pid: 'UserPatch%Fx(2)%206'	},
	fx2_wah95e_effect_level:		{ pid: 'UserPatch%Fx(2)%207'	},
	fx2_wah95e_direct_mix:			{ pid: 'UserPatch%Fx(2)%208'	},
	fx2_dc30_selector:				{ pid: 'UserPatch%Fx(2)%209'	},
	fx2_dc30_input_volume:			{ pid: 'UserPatch%Fx(2)%210'	},
	fx2_dc30_chorus_intensity:		{ pid: 'UserPatch%Fx(2)%211'	},
	fx2_dc30_echo_repeat_rate_l:	{ pid: 'UserPatch%Fx(2)%213'	},
	fx2_dc30_echo_repeat_rate_h:	{ pid: 'UserPatch%Fx(2)%212'	},
	fx2_dc30_echo_intensity:		{ pid: 'UserPatch%Fx(2)%214'	},
	fx2_dc30_echo_volume:			{ pid: 'UserPatch%Fx(2)%215'	},
	fx2_dc30_tone:					{ pid: 'UserPatch%Fx(2)%216'	},
	fx2_dc30_output:				{ pid: 'UserPatch%Fx(2)%217'	},
	eq_type:						{ pid: 'UserPatch%Patch_0%49'	},
	eq_geq_31hz:					{ pid: 'UserPatch%Patch_0%61'	},
	eq_geq_62hz:					{ pid: 'UserPatch%Patch_0%62'	},
	eq_geq_125hz:					{ pid: 'UserPatch%Patch_0%63'	},
	eq_geq_250hz:					{ pid: 'UserPatch%Patch_0%64'	},
	eq_geq_500hz:					{ pid: 'UserPatch%Patch_0%65'	},
	eq_geq_1khz:					{ pid: 'UserPatch%Patch_0%66'	},
	eq_geq_2khz:					{ pid: 'UserPatch%Patch_0%67'	},
	eq_geq_4khz:					{ pid: 'UserPatch%Patch_0%68'	},
	eq_geq_8khz:					{ pid: 'UserPatch%Patch_0%69'	},
	eq_geq_16khz:					{ pid: 'UserPatch%Patch_0%70'	},
	eq_geq_level:					{ pid: 'UserPatch%Patch_0%71'	},

	chain_ptn:						{ pid: 'UserPatch%Patch_2%0', value: [0, 1, 3]	},
	fxbox_asgn_fx1a_g:				{ pid: 'UserPatch%Patch_2%4'	},
	fxbox_asgn_fx1a_r:				{ pid: 'UserPatch%Patch_2%5'	},
	fxbox_asgn_fx1a_y:				{ pid: 'UserPatch%Patch_2%6'	},
	fxbox_asgn_fx1b_g:				{ pid: 'UserPatch%Patch_2%7'	},
	fxbox_asgn_fx1b_r:				{ pid: 'UserPatch%Patch_2%8'	},
	fxbox_asgn_fx1b_y:				{ pid: 'UserPatch%Patch_2%9'	},
	fxbox_asgn_fx2a_g:				{ pid: 'UserPatch%Patch_2%13'	},
	fxbox_asgn_fx2a_r:				{ pid: 'UserPatch%Patch_2%14'	},
	fxbox_asgn_fx2a_y:				{ pid: 'UserPatch%Patch_2%15'	},
	fxbox_asgn_fx2b_g:				{ pid: 'UserPatch%Patch_2%10'	},
	fxbox_asgn_fx2b_r:				{ pid: 'UserPatch%Patch_2%11'	},
	fxbox_asgn_fx2b_y:				{ pid: 'UserPatch%Patch_2%12'	},
	fxbox_asgn_fx3_g:				{ pid: 'UserPatch%Patch_2%16'	},
	fxbox_asgn_fx3_r:				{ pid: 'UserPatch%Patch_2%17'	},
	fxbox_asgn_fx3_y:				{ pid: 'UserPatch%Patch_2%18'	},
	fxbox_sel_fx1b:					{ pid: 'UserPatch%Patch_2%26'	},
	fxbox_sel_fx2a:					{ pid: 'UserPatch%Patch_2%28'	},
	fxbox_sel_fx3:					{ pid: 'UserPatch%Patch_2%29'	},
//	fx_active_ab_fx1:				{ pid: 'UserPatch%'	},
//	fx_active_ab_fx2:				{ pid: 'UserPatch%'	},
	fxbox_sel_fx1a:					{ pid: 'UserPatch%Patch_2%25'	},
	fxbox_sel_fx2b:					{ pid: 'UserPatch%Patch_2%27'	},
	send_return_position:			{ pid: 'UserPatch%Patch_2%1'	},
	eq_position:					{ pid: 'UserPatch%Patch_2%2'	},
	fxbox_asgn_fx3b_g:				{ pid: 'UserPatch%Patch_2%19'	},
	fxbox_asgn_fx3b_r:				{ pid: 'UserPatch%Patch_2%20'	},
	fxbox_asgn_fx3b_y:				{ pid: 'UserPatch%Patch_2%21'	},
	fxbox_layer_fx3_g:				{ pid: 'UserPatch%Patch_2%22'	},
	fxbox_layer_fx3_r:				{ pid: 'UserPatch%Patch_2%23'	},
	fxbox_layer_fx3_y:				{ pid: 'UserPatch%Patch_2%24'	},

	pedal_function_exp_pedal:		{ pid: 'UserPatch%Patch_2%30'	},
	pedal_function_gafc_exp1:		{ pid: 'UserPatch%Patch_2%31'	},
	pedal_function_gafc_exp2:		{ pid: 'UserPatch%Patch_2%32'	},

	knob_assign_booster:			{ pid: 'UserPatch%KnobAsgn%0'	},
	knob_assign_delay:				{ pid: 'UserPatch%KnobAsgn%1'	},
	knob_assign_reverb:				{ pid: 'UserPatch%KnobAsgn%2'	},
	knob_assign_chorus:				{ pid: 'UserPatch%KnobAsgn%3'	},
	knob_assign_flanger:			{ pid: 'UserPatch%KnobAsgn%4'	},
	knob_assign_phaser:				{ pid: 'UserPatch%KnobAsgn%5'	},
	knob_assign_uni_v:				{ pid: 'UserPatch%KnobAsgn%6'	},
	knob_assign_tremolo:			{ pid: 'UserPatch%KnobAsgn%7'	},
	knob_assign_vibrato:			{ pid: 'UserPatch%KnobAsgn%8'	},
	knob_assign_rotary:				{ pid: 'UserPatch%KnobAsgn%9'	},
	knob_assign_ring_mod:			{ pid: 'UserPatch%KnobAsgn%10'	},
	knob_assign_slow_gear:			{ pid: 'UserPatch%KnobAsgn%11'	},
	knob_assign_slicer:				{ pid: 'UserPatch%KnobAsgn%12'	},
	knob_assign_comp:				{ pid: 'UserPatch%KnobAsgn%13'	},
	knob_assign_limiter:			{ pid: 'UserPatch%KnobAsgn%14'	},
	knob_assign_t_wah:				{ pid: 'UserPatch%KnobAsgn%15'	},
	knob_assign_auto_wah:			{ pid: 'UserPatch%KnobAsgn%16'	},
	knob_assign_pedal_wah:			{ pid: 'UserPatch%KnobAsgn%17'	},
	knob_assign_geq:				{ pid: 'UserPatch%KnobAsgn%18'	},
	knob_assign_peq:				{ pid: 'UserPatch%KnobAsgn%19'	},
	knob_assign_guitar_sim:			{ pid: 'UserPatch%KnobAsgn%20'	},
	knob_assign_ac_guitar_sim:		{ pid: 'UserPatch%KnobAsgn%21'	},
	knob_assign_ac_processor:		{ pid: 'UserPatch%KnobAsgn%22'	},
	knob_assign_wave_synth:			{ pid: 'UserPatch%KnobAsgn%23'	},
	knob_assign_octave:				{ pid: 'UserPatch%KnobAsgn%24'	},
	knob_assign_pitch_shifter:		{ pid: 'UserPatch%KnobAsgn%25'	},
	knob_assign_harmonist:			{ pid: 'UserPatch%KnobAsgn%26'	},
	knob_assign_humanizer:			{ pid: 'UserPatch%KnobAsgn%27'	},
	knob_assign_evh_phaser:			{ pid: 'UserPatch%KnobAsgn%28'	},
	knob_assign_evh_flanger:		{ pid: 'UserPatch%KnobAsgn%29'	},
	knob_assign_evh_wah:			{ pid: 'UserPatch%KnobAsgn%30'	},
	knob_assign_dc30:				{ pid: 'UserPatch%KnobAsgn%31'	},

	exp_pedal_assign_booster:		{ pid: 'UserPatch%ExpPedalAsgn%0'	},
	exp_pedal_assign_delay:			{ pid: 'UserPatch%ExpPedalAsgn%1'	},
	exp_pedal_assign_reverb:		{ pid: 'UserPatch%ExpPedalAsgn%2'	},
	exp_pedal_assign_chorus:		{ pid: 'UserPatch%ExpPedalAsgn%3'	},
	exp_pedal_assign_flanger:		{ pid: 'UserPatch%ExpPedalAsgn%4'	},
	exp_pedal_assign_phaser:		{ pid: 'UserPatch%ExpPedalAsgn%5'	},
	exp_pedal_assign_uni_v:			{ pid: 'UserPatch%ExpPedalAsgn%6'	},
	exp_pedal_assign_tremolo:		{ pid: 'UserPatch%ExpPedalAsgn%7'	},
	exp_pedal_assign_vibrato:		{ pid: 'UserPatch%ExpPedalAsgn%8'	},
	exp_pedal_assign_rotary:		{ pid: 'UserPatch%ExpPedalAsgn%9'	},
	exp_pedal_assign_ring_mod:		{ pid: 'UserPatch%ExpPedalAsgn%10'	},
	exp_pedal_assign_slow_gear:		{ pid: 'UserPatch%ExpPedalAsgn%11'	},
	exp_pedal_assign_slicer:		{ pid: 'UserPatch%ExpPedalAsgn%12'	},
	exp_pedal_assign_comp:			{ pid: 'UserPatch%ExpPedalAsgn%13'	},
	exp_pedal_assign_limiter:		{ pid: 'UserPatch%ExpPedalAsgn%14'	},
	exp_pedal_assign_t_wah:			{ pid: 'UserPatch%ExpPedalAsgn%15'	},
	exp_pedal_assign_auto_wah:		{ pid: 'UserPatch%ExpPedalAsgn%16'	},
	exp_pedal_assign_pedal_wah:		{ pid: 'UserPatch%ExpPedalAsgn%17'	},
	exp_pedal_assign_geq:			{ pid: 'UserPatch%ExpPedalAsgn%18'	},
	exp_pedal_assign_peq:			{ pid: 'UserPatch%ExpPedalAsgn%19'	},
	exp_pedal_assign_guitar_sim:	{ pid: 'UserPatch%ExpPedalAsgn%20'	},
	exp_pedal_assign_ac_guitar_sim:	{ pid: 'UserPatch%ExpPedalAsgn%21'	},
	exp_pedal_assign_ac_processor:	{ pid: 'UserPatch%ExpPedalAsgn%22'	},
	exp_pedal_assign_wave_synth:	{ pid: 'UserPatch%ExpPedalAsgn%23'	},
	exp_pedal_assign_octave:		{ pid: 'UserPatch%ExpPedalAsgn%24'	},
	exp_pedal_assign_pitch_shifter:	{ pid: 'UserPatch%ExpPedalAsgn%25'	},
	exp_pedal_assign_harmonist:		{ pid: 'UserPatch%ExpPedalAsgn%26'	},
	exp_pedal_assign_humanizer:		{ pid: 'UserPatch%ExpPedalAsgn%27'	},
	exp_pedal_assign_evh_phaser:	{ pid: 'UserPatch%ExpPedalAsgn%28'	},
	exp_pedal_assign_evh_flanger:	{ pid: 'UserPatch%ExpPedalAsgn%29'	},
	exp_pedal_assign_evh_wah:		{ pid: 'UserPatch%ExpPedalAsgn%30'	},
	exp_pedal_assign_dc30:			{ pid: 'UserPatch%ExpPedalAsgn%31'	},

	exp_pedal_assign_booster_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%0'	},
	exp_pedal_assign_booster_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%1'	},
	exp_pedal_assign_delay_min_l:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%3'	},
	exp_pedal_assign_delay_min_h:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%2'	},
	exp_pedal_assign_delay_max_l:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%5'	},
	exp_pedal_assign_delay_max_h:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%4'	},
	exp_pedal_assign_reverb_min_l:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%7'	},
	exp_pedal_assign_reverb_min_h:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%6'	},
	exp_pedal_assign_reverb_max_l:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%9'	},
	exp_pedal_assign_reverb_max_h:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%8'	},
	exp_pedal_assign_chorus_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%10'	},
	exp_pedal_assign_chorus_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%11'	},
	exp_pedal_assign_flanger_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%12'	},
	exp_pedal_assign_flanger_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%13'	},
	exp_pedal_assign_phaser_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%14'	},
	exp_pedal_assign_phaser_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%15'	},
	exp_pedal_assign_uni_v_min:				{ pid: 'UserPatch%ExpPedalAsgnMinMax%16'	},
	exp_pedal_assign_uni_v_max:				{ pid: 'UserPatch%ExpPedalAsgnMinMax%17'	},
	exp_pedal_assign_tremolo_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%18'	},
	exp_pedal_assign_tremolo_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%19'	},
	exp_pedal_assign_vibrato_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%20'	},
	exp_pedal_assign_vibrato_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%21'	},
	exp_pedal_assign_rotary_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%22'	},
	exp_pedal_assign_rotary_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%23'	},
	exp_pedal_assign_ring_mod_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%24'	},
	exp_pedal_assign_ring_mod_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%25'	},
	exp_pedal_assign_slow_gear_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%26'	},
	exp_pedal_assign_slow_gear_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%27'	},
	exp_pedal_assign_slicer_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%28'	},
	exp_pedal_assign_slicer_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%29'	},
	exp_pedal_assign_comp_min:				{ pid: 'UserPatch%ExpPedalAsgnMinMax%30'	},
	exp_pedal_assign_comp_max:				{ pid: 'UserPatch%ExpPedalAsgnMinMax%31'	},
	exp_pedal_assign_limiter_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%32'	},
	exp_pedal_assign_limiter_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%33'	},
	exp_pedal_assign_t_wah_min:				{ pid: 'UserPatch%ExpPedalAsgnMinMax%34'	},
	exp_pedal_assign_t_wah_max:				{ pid: 'UserPatch%ExpPedalAsgnMinMax%35'	},
	exp_pedal_assign_auto_wah_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%36'	},
	exp_pedal_assign_auto_wah_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%37'	},
	exp_pedal_assign_pedal_wah_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%38'	},
	exp_pedal_assign_pedal_wah_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%39'	},
	exp_pedal_assign_geq_min:				{ pid: 'UserPatch%ExpPedalAsgnMinMax%40'	},
	exp_pedal_assign_geq_max:				{ pid: 'UserPatch%ExpPedalAsgnMinMax%41'	},
	exp_pedal_assign_peq_min:				{ pid: 'UserPatch%ExpPedalAsgnMinMax%42'	},
	exp_pedal_assign_peq_max:				{ pid: 'UserPatch%ExpPedalAsgnMinMax%43'	},
	exp_pedal_assign_guitar_sim_min:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%44'	},
	exp_pedal_assign_guitar_sim_max:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%45'	},
	exp_pedal_assign_ac_guitar_sim_min:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%46'	},
	exp_pedal_assign_ac_guitar_sim_max:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%47'	},
	exp_pedal_assign_ac_processor_min:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%48'	},
	exp_pedal_assign_ac_processor_max:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%49'	},
	exp_pedal_assign_wave_synth_min:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%50'	},
	exp_pedal_assign_wave_synth_max:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%51'	},
	exp_pedal_assign_octave_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%52'	},
	exp_pedal_assign_octave_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%53'	},
	exp_pedal_assign_pitch_shifter_min_l:	{ pid: 'UserPatch%ExpPedalAsgnMinMax%55'	},
	exp_pedal_assign_pitch_shifter_min_h:	{ pid: 'UserPatch%ExpPedalAsgnMinMax%54'	},
	exp_pedal_assign_pitch_shifter_max_l:	{ pid: 'UserPatch%ExpPedalAsgnMinMax%57'	},
	exp_pedal_assign_pitch_shifter_max_h:	{ pid: 'UserPatch%ExpPedalAsgnMinMax%56'	},
	exp_pedal_assign_harmonist_min_l:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%59'	},
	exp_pedal_assign_harmonist_min_h:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%58'	},
	exp_pedal_assign_harmonist_max_l:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%61'	},
	exp_pedal_assign_harmonist_max_h:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%60'	},
	exp_pedal_assign_humanizer_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%62'	},
	exp_pedal_assign_humanizer_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%63'	},
	exp_pedal_assign_evh_phaser_min:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%64'	},
	exp_pedal_assign_evh_phaser_max:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%65'	},
	exp_pedal_assign_evh_flanger_min:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%66'	},
	exp_pedal_assign_evh_flanger_max:		{ pid: 'UserPatch%ExpPedalAsgnMinMax%67'	},
	exp_pedal_assign_evh_wah_min:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%68'	},
	exp_pedal_assign_evh_wah_max:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%69'	},
	exp_pedal_assign_dc30_min_l:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%71'	},
	exp_pedal_assign_dc30_min_h:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%70'	},
	exp_pedal_assign_dc30_max_l:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%73'	},
	exp_pedal_assign_dc30_max_h:			{ pid: 'UserPatch%ExpPedalAsgnMinMax%72'	},

	gafc_exp1_assign_booster:				{ pid: 'UserPatch%GafcExp1Asgn%0'	},
	gafc_exp1_assign_delay:					{ pid: 'UserPatch%GafcExp1Asgn%1'	},
	gafc_exp1_assign_reverb:				{ pid: 'UserPatch%GafcExp1Asgn%2'	},
	gafc_exp1_assign_chorus:				{ pid: 'UserPatch%GafcExp1Asgn%3'	},
	gafc_exp1_assign_flanger:				{ pid: 'UserPatch%GafcExp1Asgn%4'	},
	gafc_exp1_assign_phaser:				{ pid: 'UserPatch%GafcExp1Asgn%5'	},
	gafc_exp1_assign_uni_v:					{ pid: 'UserPatch%GafcExp1Asgn%6'	},
	gafc_exp1_assign_tremolo:				{ pid: 'UserPatch%GafcExp1Asgn%7'	},
	gafc_exp1_assign_vibrato:				{ pid: 'UserPatch%GafcExp1Asgn%8'	},
	gafc_exp1_assign_rotary:				{ pid: 'UserPatch%GafcExp1Asgn%9'	},
	gafc_exp1_assign_ring_mod:				{ pid: 'UserPatch%GafcExp1Asgn%10'	},
	gafc_exp1_assign_slow_gear:				{ pid: 'UserPatch%GafcExp1Asgn%11'	},
	gafc_exp1_assign_slicer:				{ pid: 'UserPatch%GafcExp1Asgn%12'	},
	gafc_exp1_assign_comp:					{ pid: 'UserPatch%GafcExp1Asgn%13'	},
	gafc_exp1_assign_limiter:				{ pid: 'UserPatch%GafcExp1Asgn%14'	},
	gafc_exp1_assign_t_wah:					{ pid: 'UserPatch%GafcExp1Asgn%15'	},
	gafc_exp1_assign_auto_wah:				{ pid: 'UserPatch%GafcExp1Asgn%16'	},
	gafc_exp1_assign_pedal_wah:				{ pid: 'UserPatch%GafcExp1Asgn%17'	},
	gafc_exp1_assign_geq:					{ pid: 'UserPatch%GafcExp1Asgn%18'	},
	gafc_exp1_assign_peq:					{ pid: 'UserPatch%GafcExp1Asgn%19'	},
	gafc_exp1_assign_guitar_sim:			{ pid: 'UserPatch%GafcExp1Asgn%20'	},
	gafc_exp1_assign_ac_guitar_sim:			{ pid: 'UserPatch%GafcExp1Asgn%21'	},
	gafc_exp1_assign_ac_processor:			{ pid: 'UserPatch%GafcExp1Asgn%22'	},
	gafc_exp1_assign_wave_synth:			{ pid: 'UserPatch%GafcExp1Asgn%23'	},
	gafc_exp1_assign_octave:				{ pid: 'UserPatch%GafcExp1Asgn%24'	},
	gafc_exp1_assign_pitch_shifter:			{ pid: 'UserPatch%GafcExp1Asgn%25'	},
	gafc_exp1_assign_harmonist:				{ pid: 'UserPatch%GafcExp1Asgn%26'	},
	gafc_exp1_assign_humanizer:				{ pid: 'UserPatch%GafcExp1Asgn%27'	},
	gafc_exp1_assign_evh_phaser:			{ pid: 'UserPatch%GafcExp1Asgn%28'	},
	gafc_exp1_assign_evh_flanger:			{ pid: 'UserPatch%GafcExp1Asgn%29'	},
	gafc_exp1_assign_evh_wah:				{ pid: 'UserPatch%GafcExp1Asgn%30'	},
	gafc_exp1_assign_dc30:					{ pid: 'UserPatch%GafcExp1Asgn%31'	},

	gafc_exp1_assign_booster_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%0'	},
	gafc_exp1_assign_booster_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%1'	},
	gafc_exp1_assign_delay_min_l:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%3'	},
	gafc_exp1_assign_delay_min_h:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%2'	},
	gafc_exp1_assign_delay_max_l:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%5'	},
	gafc_exp1_assign_delay_max_h:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%4'	},
	gafc_exp1_assign_reverb_min_l:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%7'	},
	gafc_exp1_assign_reverb_min_h:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%6'	},
	gafc_exp1_assign_reverb_max_l:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%9'	},
	gafc_exp1_assign_reverb_max_h:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%8'	},
	gafc_exp1_assign_chorus_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%10'	},
	gafc_exp1_assign_chorus_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%11'	},
	gafc_exp1_assign_flanger_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%12'	},
	gafc_exp1_assign_flanger_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%13'	},
	gafc_exp1_assign_phaser_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%14'	},
	gafc_exp1_assign_phaser_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%15'	},
	gafc_exp1_assign_uni_v_min:				{ pid: 'UserPatch%GafcExp1AsgnMinMax%16'	},
	gafc_exp1_assign_uni_v_max:				{ pid: 'UserPatch%GafcExp1AsgnMinMax%17'	},
	gafc_exp1_assign_tremolo_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%18'	},
	gafc_exp1_assign_tremolo_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%19'	},
	gafc_exp1_assign_vibrato_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%20'	},
	gafc_exp1_assign_vibrato_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%21'	},
	gafc_exp1_assign_rotary_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%22'	},
	gafc_exp1_assign_rotary_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%23'	},
	gafc_exp1_assign_ring_mod_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%24'	},
	gafc_exp1_assign_ring_mod_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%25'	},
	gafc_exp1_assign_slow_gear_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%26'	},
	gafc_exp1_assign_slow_gear_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%27'	},
	gafc_exp1_assign_slicer_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%28'	},
	gafc_exp1_assign_slicer_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%29'	},
	gafc_exp1_assign_comp_min:				{ pid: 'UserPatch%GafcExp1AsgnMinMax%30'	},
	gafc_exp1_assign_comp_max:				{ pid: 'UserPatch%GafcExp1AsgnMinMax%31'	},
	gafc_exp1_assign_limiter_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%32'	},
	gafc_exp1_assign_limiter_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%33'	},
	gafc_exp1_assign_t_wah_min:				{ pid: 'UserPatch%GafcExp1AsgnMinMax%34'	},
	gafc_exp1_assign_t_wah_max:				{ pid: 'UserPatch%GafcExp1AsgnMinMax%35'	},
	gafc_exp1_assign_auto_wah_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%36'	},
	gafc_exp1_assign_auto_wah_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%37'	},
	gafc_exp1_assign_pedal_wah_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%38'	},
	gafc_exp1_assign_pedal_wah_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%39'	},
	gafc_exp1_assign_geq_min:				{ pid: 'UserPatch%GafcExp1AsgnMinMax%40'	},
	gafc_exp1_assign_geq_max:				{ pid: 'UserPatch%GafcExp1AsgnMinMax%41'	},
	gafc_exp1_assign_peq_min:				{ pid: 'UserPatch%GafcExp1AsgnMinMax%42'	},
	gafc_exp1_assign_peq_max:				{ pid: 'UserPatch%GafcExp1AsgnMinMax%43'	},
	gafc_exp1_assign_guitar_sim_min:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%44'	},
	gafc_exp1_assign_guitar_sim_max:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%45'	},
	gafc_exp1_assign_ac_guitar_sim_min:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%46'	},
	gafc_exp1_assign_ac_guitar_sim_max:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%47'	},
	gafc_exp1_assign_ac_processor_min:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%48'	},
	gafc_exp1_assign_ac_processor_max:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%49'	},
	gafc_exp1_assign_wave_synth_min:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%50'	},
	gafc_exp1_assign_wave_synth_max:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%51'	},
	gafc_exp1_assign_octave_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%52'	},
	gafc_exp1_assign_octave_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%53'	},
	gafc_exp1_assign_pitch_shifter_min_l:	{ pid: 'UserPatch%GafcExp1AsgnMinMax%55'	},
	gafc_exp1_assign_pitch_shifter_min_h:	{ pid: 'UserPatch%GafcExp1AsgnMinMax%54'	},
	gafc_exp1_assign_pitch_shifter_max_l:	{ pid: 'UserPatch%GafcExp1AsgnMinMax%57'	},
	gafc_exp1_assign_pitch_shifter_max_h:	{ pid: 'UserPatch%GafcExp1AsgnMinMax%56'	},
	gafc_exp1_assign_harmonist_min_l:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%59'	},
	gafc_exp1_assign_harmonist_min_h:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%58'	},
	gafc_exp1_assign_harmonist_max_l:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%61'	},
	gafc_exp1_assign_harmonist_max_h:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%60'	},
	gafc_exp1_assign_humanizer_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%62'	},
	gafc_exp1_assign_humanizer_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%63'	},
	gafc_exp1_assign_evh_phaser_min:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%64'	},
	gafc_exp1_assign_evh_phaser_max:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%65'	},
	gafc_exp1_assign_evh_flanger_min:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%66'	},
	gafc_exp1_assign_evh_flanger_max:		{ pid: 'UserPatch%GafcExp1AsgnMinMax%67'	},
	gafc_exp1_assign_evh_wah_min:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%68'	},
	gafc_exp1_assign_evh_wah_max:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%69'	},
	gafc_exp1_assign_dc30_min_l:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%71'	},
	gafc_exp1_assign_dc30_min_h:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%70'	},
	gafc_exp1_assign_dc30_max_l:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%73'	},
	gafc_exp1_assign_dc30_max_h:			{ pid: 'UserPatch%GafcExp1AsgnMinMax%72'	},

	gafc_exp2_assign_booster:				{ pid: 'UserPatch%GafcExp2Asgn%0'	},
	gafc_exp2_assign_delay:					{ pid: 'UserPatch%GafcExp2Asgn%1'	},
	gafc_exp2_assign_reverb:				{ pid: 'UserPatch%GafcExp2Asgn%2'	},
	gafc_exp2_assign_chorus:				{ pid: 'UserPatch%GafcExp2Asgn%3'	},
	gafc_exp2_assign_flanger:				{ pid: 'UserPatch%GafcExp2Asgn%4'	},
	gafc_exp2_assign_phaser:				{ pid: 'UserPatch%GafcExp2Asgn%5'	},
	gafc_exp2_assign_uni_v:					{ pid: 'UserPatch%GafcExp2Asgn%6'	},
	gafc_exp2_assign_tremolo:				{ pid: 'UserPatch%GafcExp2Asgn%7'	},
	gafc_exp2_assign_vibrato:				{ pid: 'UserPatch%GafcExp2Asgn%8'	},
	gafc_exp2_assign_rotary:				{ pid: 'UserPatch%GafcExp2Asgn%9'	},
	gafc_exp2_assign_ring_mod:				{ pid: 'UserPatch%GafcExp2Asgn%10'	},
	gafc_exp2_assign_slow_gear:				{ pid: 'UserPatch%GafcExp2Asgn%11'	},
	gafc_exp2_assign_slicer:				{ pid: 'UserPatch%GafcExp2Asgn%12'	},
	gafc_exp2_assign_comp:					{ pid: 'UserPatch%GafcExp2Asgn%13'	},
	gafc_exp2_assign_limiter:				{ pid: 'UserPatch%GafcExp2Asgn%14'	},
	gafc_exp2_assign_t_wah:					{ pid: 'UserPatch%GafcExp2Asgn%15'	},
	gafc_exp2_assign_auto_wah:				{ pid: 'UserPatch%GafcExp2Asgn%16'	},
	gafc_exp2_assign_pedal_wah:				{ pid: 'UserPatch%GafcExp2Asgn%17'	},
	gafc_exp2_assign_geq:					{ pid: 'UserPatch%GafcExp2Asgn%18'	},
	gafc_exp2_assign_peq:					{ pid: 'UserPatch%GafcExp2Asgn%19'	},
	gafc_exp2_assign_guitar_sim:			{ pid: 'UserPatch%GafcExp2Asgn%20'	},
	gafc_exp2_assign_ac_guitar_sim:			{ pid: 'UserPatch%GafcExp2Asgn%21'	},
	gafc_exp2_assign_ac_processor:			{ pid: 'UserPatch%GafcExp2Asgn%22'	},
	gafc_exp2_assign_wave_synth:			{ pid: 'UserPatch%GafcExp2Asgn%23'	},
	gafc_exp2_assign_octave:				{ pid: 'UserPatch%GafcExp2Asgn%24'	},
	gafc_exp2_assign_pitch_shifter:			{ pid: 'UserPatch%GafcExp2Asgn%25'	},
	gafc_exp2_assign_harmonist:				{ pid: 'UserPatch%GafcExp2Asgn%26'	},
	gafc_exp2_assign_humanizer:				{ pid: 'UserPatch%GafcExp2Asgn%27'	},
	gafc_exp2_assign_evh_phaser:			{ pid: 'UserPatch%GafcExp2Asgn%28'	},
	gafc_exp2_assign_evh_flanger:			{ pid: 'UserPatch%GafcExp2Asgn%29'	},
	gafc_exp2_assign_evh_wah:				{ pid: 'UserPatch%GafcExp2Asgn%30'	},
	gafc_exp2_assign_dc30:					{ pid: 'UserPatch%GafcExp2Asgn%31'	},

	gafc_exp2_assign_booster_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%0'	},
	gafc_exp2_assign_booster_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%1'	},
	gafc_exp2_assign_delay_min_l:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%3'	},
	gafc_exp2_assign_delay_min_h:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%2'	},
	gafc_exp2_assign_delay_max_l:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%5'	},
	gafc_exp2_assign_delay_max_h:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%4'	},
	gafc_exp2_assign_reverb_min_l:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%7'	},
	gafc_exp2_assign_reverb_min_h:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%6'	},
	gafc_exp2_assign_reverb_max_l:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%9'	},
	gafc_exp2_assign_reverb_max_h:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%8'	},
	gafc_exp2_assign_chorus_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%10'	},
	gafc_exp2_assign_chorus_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%11'	},
	gafc_exp2_assign_flanger_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%12'	},
	gafc_exp2_assign_flanger_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%13'	},
	gafc_exp2_assign_phaser_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%14'	},
	gafc_exp2_assign_phaser_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%15'	},
	gafc_exp2_assign_uni_v_min:				{ pid: 'UserPatch%GafcExp2AsgnMinMax%16'	},
	gafc_exp2_assign_uni_v_max:				{ pid: 'UserPatch%GafcExp2AsgnMinMax%17'	},
	gafc_exp2_assign_tremolo_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%18'	},
	gafc_exp2_assign_tremolo_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%19'	},
	gafc_exp2_assign_vibrato_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%20'	},
	gafc_exp2_assign_vibrato_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%21'	},
	gafc_exp2_assign_rotary_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%22'	},
	gafc_exp2_assign_rotary_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%23'	},
	gafc_exp2_assign_ring_mod_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%24'	},
	gafc_exp2_assign_ring_mod_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%25'	},
	gafc_exp2_assign_slow_gear_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%26'	},
	gafc_exp2_assign_slow_gear_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%27'	},
	gafc_exp2_assign_slicer_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%28'	},
	gafc_exp2_assign_slicer_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%29'	},
	gafc_exp2_assign_comp_min:				{ pid: 'UserPatch%GafcExp2AsgnMinMax%30'	},
	gafc_exp2_assign_comp_max:				{ pid: 'UserPatch%GafcExp2AsgnMinMax%31'	},
	gafc_exp2_assign_limiter_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%32'	},
	gafc_exp2_assign_limiter_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%33'	},
	gafc_exp2_assign_t_wah_min:				{ pid: 'UserPatch%GafcExp2AsgnMinMax%34'	},
	gafc_exp2_assign_t_wah_max:				{ pid: 'UserPatch%GafcExp2AsgnMinMax%35'	},
	gafc_exp2_assign_auto_wah_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%36'	},
	gafc_exp2_assign_auto_wah_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%37'	},
	gafc_exp2_assign_pedal_wah_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%38'	},
	gafc_exp2_assign_pedal_wah_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%39'	},
	gafc_exp2_assign_geq_min:				{ pid: 'UserPatch%GafcExp2AsgnMinMax%40'	},
	gafc_exp2_assign_geq_max:				{ pid: 'UserPatch%GafcExp2AsgnMinMax%41'	},
	gafc_exp2_assign_peq_min:				{ pid: 'UserPatch%GafcExp2AsgnMinMax%42'	},
	gafc_exp2_assign_peq_max:				{ pid: 'UserPatch%GafcExp2AsgnMinMax%43'	},
	gafc_exp2_assign_guitar_sim_min:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%44'	},
	gafc_exp2_assign_guitar_sim_max:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%45'	},
	gafc_exp2_assign_ac_guitar_sim_min:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%46'	},
	gafc_exp2_assign_ac_guitar_sim_max:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%47'	},
	gafc_exp2_assign_ac_processor_min:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%48'	},
	gafc_exp2_assign_ac_processor_max:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%49'	},
	gafc_exp2_assign_wave_synth_min:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%50'	},
	gafc_exp2_assign_wave_synth_max:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%51'	},
	gafc_exp2_assign_octave_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%52'	},
	gafc_exp2_assign_octave_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%53'	},
	gafc_exp2_assign_pitch_shifter_min_l:	{ pid: 'UserPatch%GafcExp2AsgnMinMax%55'	},
	gafc_exp2_assign_pitch_shifter_min_h:	{ pid: 'UserPatch%GafcExp2AsgnMinMax%54'	},
	gafc_exp2_assign_pitch_shifter_max_l:	{ pid: 'UserPatch%GafcExp2AsgnMinMax%57'	},
	gafc_exp2_assign_pitch_shifter_max_h:	{ pid: 'UserPatch%GafcExp2AsgnMinMax%56'	},
	gafc_exp2_assign_harmonist_min_l:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%59'	},
	gafc_exp2_assign_harmonist_min_h:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%58'	},
	gafc_exp2_assign_harmonist_max_l:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%61'	},
	gafc_exp2_assign_harmonist_max_h:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%60'	},
	gafc_exp2_assign_humanizer_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%62'	},
	gafc_exp2_assign_humanizer_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%63'	},
	gafc_exp2_assign_evh_phaser_min:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%64'	},
	gafc_exp2_assign_evh_phaser_max:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%65'	},
	gafc_exp2_assign_evh_flanger_min:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%66'	},
	gafc_exp2_assign_evh_flanger_max:		{ pid: 'UserPatch%GafcExp2AsgnMinMax%67'	},
	gafc_exp2_assign_evh_wah_min:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%68'	},
	gafc_exp2_assign_evh_wah_max:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%69'	},
	gafc_exp2_assign_dc30_min_l:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%71'	},
	gafc_exp2_assign_dc30_min_h:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%70'	},
	gafc_exp2_assign_dc30_max_l:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%73'	},
	gafc_exp2_assign_dc30_max_h:			{ pid: 'UserPatch%GafcExp2AsgnMinMax%72'	},
};

function KtnMk1PatchModel() {
	this.paramSet = KtnMk1Patch;
	PatchConverter.call(this);
}

KtnMk1PatchModel.prototype = Object.create(PatchConverter.prototype);

KtnMk1PatchModel.prototype.import = function(data, revision) {
	if (revision !== '1.0.0') throw new Error('this file is unsupported');
	var patchInfo = new PatchInfo(false);
	if (data.note)	patchInfo['note'] = data.note;
	if (data.logPatchName)	patchInfo['logPatchName'] = data.logPatchName;
	var patch = this.create(patchInfo);
	patch.paramSet = JSON.parse(_INIT_PARAM_SET); // deep copy
	for (var prop in data.params) {
		var p = this.paramSet[prop];
		if (! p)	continue;
		var pid = p.pid.split('%');
		var ofs = parseInt(pid.pop(), 10);
		var b = patch.paramSet[pid.join('%')];
		if (b) {
			var v = parseInt(data.params[prop], 10);
			if (p.value) {
				v = p.value[v];
			}
			b[ofs] = hex2(v);
		}
	}
	adjustWahSettings(patch.paramSet);
	return patch;

	function adjustWahSettings(paramSet) {
		var pedalWah	= false;
		var wah95e		= false;
		var setPedalFx	= false;
		var t;
		// mod
		if ((! pedalWah) || (! wah95e)) {
			t = parseInt(paramSet['UserPatch%Patch_2'][0x1a], 16);
			checkWahSettings(0x07 + t, paramSet, 'UserPatch%Fx(1)', true);
			for (var i = 0; i < 3; i++) {
				if (i !== t)	checkWahSettings(0x07 + i, paramSet, 'UserPatch%Fx(1)');
			}
		}
		// fx
		if ((! pedalWah) || (! wah95e)) {
			t = parseInt(paramSet['UserPatch%Patch_2'][0x1b], 16);
			checkWahSettings(0x0a + t, paramSet, 'UserPatch%Fx(2)', true);
			for (var i = 0; i < 3; i++) {
				if (i !== t)	checkWahSettings(0x0a + i, paramSet, 'UserPatch%Fx(2)');
			}
		}

		function checkWahSettings(index, paramSet, bid, setup) {
			switch (parseInt(paramSet['UserPatch%Patch_2'][index], 16)) {
			case 2:		// PEDAL WAH (_VAL_FXTYPE_SUBWAH)
				if (! pedalWah) {
					pedalWah = true;
					copyPedalWahSettings(paramSet, bid);
					if (setup && (! setPedalFx)) {
						setupPedalFx(paramSet, bid, '00');	// _VAL_EXP_PEDAL_FX_TYPE_WAH
						setPedalFx = true;
					}
				}
				break;
			case 37:	// WAH 95E (_VAL_FXTYPE_EVH_WAH)
				if (! wah95e) {
					wah95e = true;
					copyWah95eSettings(paramSet, bid);
					if (setup && (! setPedalFx)) {
						setupPedalFx(paramSet, bid, '02');	// _VAL_EXP_PEDAL_FX_TYPE_EVH95
						setPedalFx = true;
					}
				}
				break;
			}

			function setupPedalFx(paramSet, bid, type) {
				paramSet[bid][0x00] = '00';	// mod/fx sw -> off
				paramSet['UserPatch%Patch_1'][0x10] = '01';	// pedal fx sw -> on
				paramSet['UserPatch%Patch_1'][0x11] = type;

				var pos = '00';	// INPUT
				switch (parseInt(paramSet['UserPatch%Patch_2'][0x00], 16)) {	// chain
				case 0:
					pos = '01'/* POST AMP */;
					break;
				case 1:
					if (bid === 'UserPatch%Fx(2)') {
						pos = '01'; // POST AMP
					}
					break;
				//case 3:
				//	pos = '00'/* INPUT */;
				//	break;
				}
				paramSet['UserPatch%Patch_2'][0x03] = pos;
			}
		}
		function copyPedalWahSettings(paramSet, bid) {
			for (var i = 0, max = (0x15 - 0x10); i <= max; i++) {
				paramSet['UserPatch%Patch_1'][0x12 + i] = paramSet[bid][0x10 + i];	// PRM_FX1_SUBWAH_TYPE
			}
		}
		function copyWah95eSettings(paramSet, bid) {
			for (var i = 0, max = (0x150 - 0x14c); i <= max; i++) {
				paramSet['UserPatch%Patch_1'][0x1c + i] = paramSet[bid][0xcc + i];	// PRM_FX1_EVH_WAH_PEDAL_POS
			}
		}
	}
}

function KtnMk1LivesetModel() {
	var converter = new KtnMk1PatchModel();
	LivesetConverter.call(this, 'GT', converter);
}

KtnMk1LivesetModel.prototype = Object.create(LivesetConverter.prototype);
KtnMk1LivesetModel.prototype.livesetName = function(data) {
	return data.liveSetData.name;
}
KtnMk1LivesetModel.prototype.numOfPatch = function(data) {
	return data.patchList.length;
}
KtnMk1LivesetModel.prototype.patchData = function(data, index) {
	return data.patchList[index];
}
KtnMk1LivesetModel.prototype.srcRevision = function(data) {
	return data.version;
}

$(function() {
	// window.Converter.liveset = new KtnMk1LivesetModel();
});
